{"remainingRequest":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\src\\components\\Process\\panel\\taskPanel.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\src\\components\\Process\\panel\\taskPanel.vue","mtime":1733705220400},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\babel.config.js","mtime":1733705220203},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["_User","_interopRequireDefault","require","_Role","_Expression","_ElInputTag","_StrUtil","name","components","FlowUser","FlowRole","FlowExp","ElInputTag","props","id","type","String","required","data","userVisible","roleVisible","expVisible","isIndeterminate","checkType","userType","userTypeOption","label","value","checkAll","bpmnFormData","assignee","candidateUsers","candidateGroups","dueDate","priority","dataType","expId","selectData","exp","otherExtensionList","watch","handler","newVal","StrUtil","isNotBlank","resetTaskForm","immediate","created","methods","key","_this$modelerStore$el","modelerStore","element","businessObject","$set","checkValuesEcho","updateElementTask","taskAttr","Object","create","modeling","updateProperties","updateCustomElement","updateUserType","val","deleteFlowAttar","formData","getExpList","getRoleList","getUserList","_this$modelerStore$ex","_this$modelerStore$ex2","expList","find","item","toString","_this$modelerStore$us","newArr","userList","filter","i","split","includes","userId","map","nickName","join","_this$modelerStore$ro","roleList","roleId","roleName","singleUserCheck","multipleUserCheck","singleRoleCheck","multipleRoleCheck","singleExpCheck","expSelect","selection","expression","handleSelectData","userSelect","Array","userIds","roleSelect","oldKey","checkUserComplete","checkRoleComplete","checkExpComplete","unique","arr","code","res","Map","has","set","updateElementExtensions","properties","extensions","moddle","values","concat","extensionElements"],"sources":["src/components/Process/panel/taskPanel.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-form label-width=\"80px\" size=\"small\">\r\n      <el-form-item label=\"异步\">\r\n        <el-switch v-model=\"bpmnFormData.async\" active-text=\"是\" inactive-text=\"否\" @change=\"updateElementTask('async')\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"用户类型\">\r\n        <el-select v-model=\"bpmnFormData.userType\" placeholder=\"选择人员\" @change=\"updateUserType\">\r\n          <el-option\r\n            v-for=\"item in userTypeOption\"\r\n            :key=\"item.value\"\r\n            :label=\"item.label\"\r\n            :value=\"item.value\"\r\n          />\r\n        </el-select>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"指定人员\" v-if=\"bpmnFormData.userType === 'assignee'\">\r\n        <el-input-tag v-model=\"bpmnFormData.assignee\" :value=\"bpmnFormData.assignee\"/>\r\n        <el-button-group class=\"ml-4\" style=\"margin-top: 4px\">\r\n          <!--指定人员-->\r\n          <el-tooltip class=\"box-item\" effect=\"dark\" content=\"指定人员\" placement=\"bottom\">\r\n            <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-user\" @click=\"singleUserCheck\"/>\r\n          </el-tooltip>\r\n          <!--选择表达式-->\r\n          <el-tooltip class=\"box-item\" effect=\"dark\" content=\"选择表达式\" placement=\"bottom\">\r\n            <el-button size=\"mini\" type=\"warning\" icon=\"el-icon-postcard\" @click=\"singleExpCheck\"/>\r\n          </el-tooltip>\r\n        </el-button-group>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"候选人员\" v-else-if=\"bpmnFormData.userType === 'candidateUsers'\">\r\n        <el-input-tag v-model=\"bpmnFormData.candidateUsers\" :value=\"bpmnFormData.candidateUsers\"/>\r\n        <el-button-group class=\"ml-4\" style=\"margin-top: 4px\">\r\n          <!--候选人员-->\r\n          <el-tooltip class=\"box-item\" effect=\"dark\" content=\"候选人员\" placement=\"bottom\">\r\n            <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-user\" @click=\"multipleUserCheck\"/>\r\n          </el-tooltip>\r\n          <!--选择表达式-->\r\n          <el-tooltip class=\"box-item\" effect=\"dark\" content=\"选择表达式\" placement=\"bottom\">\r\n            <el-button size=\"mini\" type=\"warning\" icon=\"el-icon-postcard\" @click=\"singleExpCheck\"/>\r\n          </el-tooltip>\r\n        </el-button-group>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"候选角色\" v-else>\r\n        <el-input-tag v-model=\"bpmnFormData.candidateGroups\" :value=\"bpmnFormData.candidateGroups\"/>\r\n        <el-button-group class=\"ml-4\" style=\"margin-top: 4px\">\r\n          <!--候选角色-->\r\n          <el-tooltip class=\"box-item\" effect=\"dark\" content=\"候选角色\" placement=\"bottom\">\r\n            <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-user\"  @click=\"multipleRoleCheck\"/>\r\n          </el-tooltip>\r\n          <!--选择表达式-->\r\n          <el-tooltip class=\"box-item\" effect=\"dark\" content=\"选择表达式\" placement=\"bottom\">\r\n            <el-button size=\"mini\" type=\"warning\" icon=\"el-icon-postcard\" @click=\"singleExpCheck\"/>\r\n          </el-tooltip>\r\n        </el-button-group>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"优先级\">\r\n        <el-input v-model=\"bpmnFormData.priority\" @change=\"updateElementTask('priority')\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"到期时间\">\r\n        <el-input v-model=\"bpmnFormData.dueDate\" @change=\"updateElementTask('dueDate')\"/>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n    <!--选择人员-->\r\n    <el-dialog\r\n      title=\"选择人员\"\r\n      :visible.sync=\"userVisible\"\r\n      width=\"60%\"\r\n      :close-on-press-escape=\"false\"\r\n      :show-close=\"false\"\r\n    >\r\n      <flow-user v-if=\"userVisible\" :checkType=\"checkType\" :selectValues=\"selectData.assignee || selectData.candidateUsers\" @handleUserSelect=\"userSelect\"></flow-user>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button size=\"small\" @click=\"userVisible = false\">取 消</el-button>\r\n        <el-button size=\"small\" type=\"primary\" @click=\"checkUserComplete\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!--选择角色-->\r\n    <el-dialog\r\n      title=\"选择候选角色\"\r\n      :visible.sync=\"roleVisible\"\r\n      width=\"60%\"\r\n      :close-on-press-escape=\"false\"\r\n      :show-close=\"false\"\r\n    >\r\n      <flow-role v-if=\"roleVisible\" :selectValues=\"selectData.candidateGroups\" @handleRoleSelect=\"roleSelect\"></flow-role>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button size=\"small\" @click=\"roleVisible = false\">取 消</el-button>\r\n        <el-button size=\"small\" type=\"primary\" @click=\"checkRoleComplete\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!--选择表达式-->\r\n    <el-dialog\r\n      title=\"选择表达式\"\r\n      :visible.sync=\"expVisible\"\r\n      width=\"60%\"\r\n      :close-on-press-escape=\"false\"\r\n      :show-close=\"false\"\r\n    >\r\n      <flow-exp v-if=\"expVisible\" :selectValues=\"selectData.exp\" @handleSingleExpSelect=\"expSelect\"></flow-exp>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button size=\"small\" @click=\"expVisible = false\">取 消</el-button>\r\n        <el-button size=\"small\" type=\"primary\" @click=\"checkExpComplete\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport FlowUser from '@/components/flow/User'\r\nimport FlowRole from '@/components/flow/Role'\r\nimport FlowExp from '@/components/flow/Expression'\r\nimport ElInputTag from '@/components/flow/ElInputTag'\r\nimport {StrUtil} from '@/utils/StrUtil'\r\n\r\nexport default {\r\n  name: \"TaskPanel\",\r\n  components: {\r\n    FlowUser,\r\n    FlowRole,\r\n    FlowExp,\r\n    ElInputTag\r\n  },\r\n  /** 组件传值  */\r\n  props : {\r\n    id: {\r\n      type: String,\r\n      required: true\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      userVisible: false,\r\n      roleVisible: false,\r\n      expVisible: false,\r\n      isIndeterminate: true,\r\n      checkType: 'single', // 选类\r\n      userType: '',\r\n      userTypeOption: [\r\n        {label: '指定人员', value: 'assignee'},\r\n        {label: '候选人员', value: 'candidateUsers'},\r\n        {label: '候选角色', value: 'candidateGroups'}\r\n      ],\r\n      checkAll: false,\r\n      bpmnFormData: {\r\n        userType: \"\",\r\n        assignee: \"\",\r\n        candidateUsers: \"\",\r\n        candidateGroups: \"\",\r\n        dueDate: \"\",\r\n        priority: \"\",\r\n        dataType: \"\",\r\n        expId: \"\",\r\n      },\r\n      // 数据回显\r\n      selectData: {\r\n        assignee: null,\r\n        candidateUsers: null,\r\n        candidateGroups: null,\r\n        exp: null,\r\n      },\r\n      otherExtensionList:[],\r\n    }\r\n  },\r\n\r\n  /** 传值监听 */\r\n  watch: {\r\n    id: {\r\n      handler(newVal) {\r\n        if (StrUtil.isNotBlank(newVal)) {\r\n          this.resetTaskForm();\r\n        }\r\n      },\r\n      immediate: true, // 立即生效\r\n    },\r\n  },\r\n  created() {\r\n\r\n  },\r\n  methods: {\r\n    // 初始化表单\r\n    resetTaskForm() {\r\n      // 初始化设为空值\r\n      this.bpmnFormData = {\r\n        userType: \"\",\r\n        assignee: \"\",\r\n        candidateUsers: \"\",\r\n        candidateGroups: \"\",\r\n        dueDate: \"\",\r\n        priority: \"\",\r\n        dataType: \"\",\r\n        expId: \"\",\r\n      }\r\n      this.selectData = {\r\n        assignee: null,\r\n        candidateUsers: null,\r\n        candidateGroups: null,\r\n        exp: null,\r\n      }\r\n      // 流程节点信息上取值\r\n      for (let key in this.bpmnFormData) {\r\n        const value = this.modelerStore.element?.businessObject[key] || this.bpmnFormData[key];\r\n        this.$set(this.bpmnFormData, key, value);\r\n      }\r\n      // 人员信息回显\r\n      this.checkValuesEcho(this.bpmnFormData);\r\n    },\r\n\r\n    // 更新节点信息\r\n    updateElementTask(key) {\r\n      const taskAttr = Object.create(null);\r\n      taskAttr[key] = this.bpmnFormData[key] || \"\";\r\n      this.modelerStore.modeling.updateProperties(this.modelerStore.element, taskAttr);\r\n    },\r\n\r\n    // 更新自定义流程节点/参数信息\r\n    updateCustomElement(key, value) {\r\n      const taskAttr = Object.create(null);\r\n      taskAttr[key] = value;\r\n      this.modelerStore.modeling.updateProperties(this.modelerStore.element, taskAttr);\r\n    },\r\n\r\n    // 更新人员类型\r\n    updateUserType(val) {\r\n      // 删除xml中已选择数据类型节点\r\n      this.deleteFlowAttar();\r\n      delete this.modelerStore.element.businessObject[`userType`]\r\n      // 清除已选人员数据\r\n      this.bpmnFormData[val] = null;\r\n      this.selectData = {\r\n        assignee: null,\r\n        candidateUsers: null,\r\n        candidateGroups: null,\r\n        exp: null,\r\n      }\r\n      // 写入userType节点信息到xml\r\n      this.updateCustomElement('userType', val);\r\n    },\r\n\r\n    // 设计器右侧表单数据回显\r\n    checkValuesEcho(formData) {\r\n      if (StrUtil.isNotBlank(formData.expId)) {\r\n        this.getExpList(formData.expId, formData.userType);\r\n      } else {\r\n        if (\"candidateGroups\" === formData.userType) {\r\n          this.getRoleList(formData[formData.userType], formData.userType);\r\n        } else {\r\n          this.getUserList(formData[formData.userType], formData.userType);\r\n        }\r\n      }\r\n    },\r\n\r\n    // 获取表达式信息\r\n    getExpList(val, key) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.bpmnFormData[key] = this.modelerStore.expList?.find(item => item.id.toString() === val).name;\r\n        this.selectData.exp = this.modelerStore.expList?.find(item => item.id.toString() === val).id;\r\n      }\r\n    },\r\n\r\n    // 获取人员信息\r\n    getUserList(val, key) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        const newArr = this.modelerStore.userList?.filter(i => val.split(',').includes(i.userId.toString()))\r\n        this.bpmnFormData[key] = newArr.map(item => item.nickName).join(',');\r\n        if ('assignee' === key) {\r\n          this.selectData[key] = newArr.find(item => item.userId.toString() === val).userId;\r\n        } else {\r\n          this.selectData[key] = newArr.map(item => item.userId);\r\n        }\r\n      }\r\n    },\r\n\r\n    // 获取角色信息\r\n    getRoleList(val, key) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        const newArr = this.modelerStore.roleList?.filter(i => val.split(',').includes(i.roleId.toString()))\r\n        this.bpmnFormData[key] = newArr.map(item => item.roleName).join(',');\r\n        if ('assignee' === key) {\r\n          this.selectData[key] = newArr.find(item => item.roleId.toString() === val).roleId;\r\n        } else {\r\n          this.selectData[key] = newArr.map(item => item.roleId);\r\n        }\r\n      }\r\n    },\r\n\r\n    // ------ 流程审批人员信息弹出框 start---------\r\n\r\n    /*单选人员*/\r\n    singleUserCheck() {\r\n      this.userVisible = true;\r\n      this.checkType = \"single\";\r\n    },\r\n\r\n    /*多选人员*/\r\n    multipleUserCheck() {\r\n      this.userVisible = true;\r\n      this.checkType = \"multiple\";\r\n    },\r\n\r\n    /*单选角色*/\r\n    singleRoleCheck() {\r\n      this.roleVisible = true;\r\n      this.checkType = \"single\";\r\n    },\r\n\r\n    /*多选角色*/\r\n    multipleRoleCheck() {\r\n      this.roleVisible = true;\r\n    },\r\n\r\n    /*单选表达式*/\r\n    singleExpCheck() {\r\n      this.expVisible = true;\r\n    },\r\n\r\n    // 表达式选中数据\r\n    expSelect(selection) {\r\n      if (selection) {\r\n        this.deleteFlowAttar();\r\n        this.bpmnFormData[this.bpmnFormData.userType] = selection.name;\r\n        this.updateCustomElement('dataType', selection.dataType);\r\n        this.updateCustomElement('expId', selection.id.toString());\r\n        this.updateCustomElement(this.bpmnFormData.userType, selection.expression);\r\n        this.handleSelectData(\"exp\", selection.id);\r\n      }\r\n    },\r\n\r\n    // 用户选中数据 TODO: 后面更改为 点击确认按钮再赋值人员信息\r\n    userSelect(selection) {\r\n      if (selection) {\r\n        this.deleteFlowAttar();\r\n        this.updateCustomElement('dataType', 'fixed');\r\n        if (selection instanceof Array) {\r\n          const userIds = selection.map(item => item.userId);\r\n          const nickName = selection.map(item => item.nickName);\r\n          // userType = candidateUsers\r\n          this.bpmnFormData[this.bpmnFormData.userType] = nickName.join(',');\r\n          this.updateCustomElement(this.bpmnFormData.userType, userIds.join(','));\r\n          this.handleSelectData(this.bpmnFormData.userType, userIds);\r\n        } else {\r\n          // userType = assignee\r\n          this.bpmnFormData[this.bpmnFormData.userType] = selection.nickName;\r\n          this.updateCustomElement(this.bpmnFormData.userType, selection.userId);\r\n          this.handleSelectData(this.bpmnFormData.userType, selection.userId);\r\n        }\r\n      }\r\n    },\r\n\r\n    // 角色选中数据\r\n    roleSelect(selection, name) {\r\n      if (selection && name) {\r\n        this.deleteFlowAttar();\r\n        this.bpmnFormData[this.bpmnFormData.userType] = name;\r\n        this.updateCustomElement('dataType', 'fixed');\r\n        // userType = candidateGroups\r\n        this.updateCustomElement(this.bpmnFormData.userType, selection);\r\n        this.handleSelectData(this.bpmnFormData.userType, selection);\r\n      }\r\n    },\r\n\r\n    // 处理人员回显\r\n    handleSelectData(key, value) {\r\n      for (let oldKey in this.selectData) {\r\n        if (key !== oldKey) {\r\n          this.$set(this.selectData, oldKey, null);\r\n        } else {\r\n          this.$set(this.selectData, oldKey, value);\r\n        }\r\n      }\r\n    },\r\n\r\n    /*用户选中赋值*/\r\n    checkUserComplete() {\r\n      this.userVisible = false;\r\n      this.checkType = \"\";\r\n    },\r\n\r\n    /*候选角色选中赋值*/\r\n    checkRoleComplete() {\r\n      this.roleVisible = false;\r\n    },\r\n\r\n    /*表达式选中赋值*/\r\n    checkExpComplete() {\r\n      this.expVisible = false;\r\n    },\r\n\r\n    // 删除节点\r\n    deleteFlowAttar() {\r\n      delete this.modelerStore.element.businessObject[`dataType`]\r\n      delete this.modelerStore.element.businessObject[`expId`]\r\n      delete this.modelerStore.element.businessObject[`assignee`]\r\n      delete this.modelerStore.element.businessObject[`candidateUsers`]\r\n      delete this.modelerStore.element.businessObject[`candidateGroups`]\r\n    },\r\n\r\n    // 去重数据\r\n    unique(arr, code) {\r\n      const res = new Map();\r\n      return arr.filter((item) => !res.has(item[code]) && res.set(item[code], 1));\r\n    },\r\n\r\n    // 更新扩展属性信息\r\n    updateElementExtensions(properties) {\r\n      const extensions = this.modelerStore.moddle.create(\"bpmn:ExtensionElements\", {\r\n        values: this.otherExtensionList.concat([properties])\r\n      });\r\n\r\n      this.modelerStore.modeling.updateProperties(this.modelerStore.element, {\r\n        extensionElements: extensions\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"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","ignoreList":[]}]}