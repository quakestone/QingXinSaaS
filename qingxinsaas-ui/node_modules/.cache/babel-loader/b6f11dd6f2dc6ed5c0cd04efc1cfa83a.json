{"remainingRequest":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\src\\components\\Process\\panel\\taskListener.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\src\\components\\Process\\panel\\taskListener.vue","mtime":1733705220399},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\babel.config.js","mtime":1733705220203},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["_listener","require","_bpmnUtils","_StrUtil","name","dicts","props","id","type","String","required","data","elementListenersList","listenerForm","listenerFormModelVisible","fieldsListOfListener","bpmnElementListeners","otherExtensionList","listenerFieldForm","listenerFieldFormModelVisible","editingListenerIndex","editingListenerFieldIndex","listenerList","checkedListenerData","listenerSystemVisible","listenerSystemChecked","loading","total","listenerTypeObject","classListener","expressionListener","delegateExpressionListener","scriptListener","listenerEventTypeObject","create","assignment","complete","delete","fieldTypeObject","string","expression","queryParams","pageNum","pageSize","watch","handler","newVal","StrUtil","isNotBlank","resetListenersList","immediate","created","getList","methods","_this$modelerStore$el","_this$modelerStore$el2","_this","modelerStore","element","businessObject","extensionElements","values","filter","ex","$type","map","listener","initListenerType","$emit","length","openListenerForm","index","_this2","initListenerForm","fields","field","_objectSpread2","default","fieldType","$set","$nextTick","$refs","clearValidate","openListenerFieldForm","_this3","JSON","parse","stringify","saveListenerFiled","_this4","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","validateStatus","wrap","_callee$","_context","prev","next","validate","sent","abrupt","push","splice","stop","removeListenerField","_this5","$confirm","confirmButtonText","cancelButtonText","then","catch","console","info","removeListener","_this6","updateElementExtensions","moddle","modeling","concat","r","saveListenerConfig","_this7","_callee2","_this7$modelerStore$e","_this7$modelerStore$e2","listenerObject","_callee2$","_context2","createListenerObject","_listener$script","listenerType","class","delegateExpression","script","self","scriptType","resource","event","eventDefinitions","k","key","log","indexOf","eventDefinitionType","replace","toLowerCase","eventTimeDefinitions","body","_this8","listListener","response","rows","handleSelectionChange","selection","saveSystemListener","_this9","forEach","value","_this9$modelerStore$e","_this9$modelerStore$e2","createSystemListenerObject","changeListenerObject"],"sources":["src/components/Process/panel/taskListener.vue"],"sourcesContent":["<template>\r\n  <div class=\"panel-tab__content\">\r\n    <el-table :data=\"elementListenersList\" border size=\"mini\">\r\n      <el-table-column label=\"序号\" width=\"50px\" type=\"index\" />\r\n      <el-table-column label=\"类型\" width=\"60px\" show-overflow-tooltip :formatter=\"row => listenerEventTypeObject[row.event]\" />\r\n<!--      <el-table-column label=\"事件id\" min-width=\"70px\" prop=\"id\" show-overflow-tooltip />-->\r\n      <el-table-column label=\"监听类型\" width=\"85px\" show-overflow-tooltip :formatter=\"row => listenerTypeObject[row.listenerType]\" />\r\n      <el-table-column label=\"操作\" >\r\n        <template  slot-scope=\"scope\">\r\n          <el-button size=\"mini\" type=\"primary\" @click=\"openListenerForm(scope.row, scope.$index)\">编辑</el-button>\r\n          <el-divider direction=\"vertical\" />\r\n          <el-button size=\"mini\" type=\"danger\" @click=\"removeListener(scope.row, scope.$index)\">移除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <div class=\"element-drawer__button_save\">\r\n      <el-button type=\"primary\" icon=\"el-icon-plus\" size=\"small\" @click=\"listenerSystemVisible = true\">内置监听器</el-button>\r\n      <el-button type=\"primary\" icon=\"el-icon-plus\" size=\"small\" @click=\"openListenerForm(null)\">自定义监听器</el-button>\r\n    </div>\r\n\r\n    <!-- 监听器 编辑/创建 部分 -->\r\n    <el-drawer :visible.sync=\"listenerFormModelVisible\" title=\"任务监听器\" size=\"480px\" append-to-body destroy-on-close>\r\n      <el-form :model=\"listenerForm\" size=\"small\" label-width=\"110px\" ref=\"listenerFormRef\" @submit.native.prevent>\r\n        <el-form-item prop=\"event\" :rules=\"{ required: true, trigger: ['blur', 'change'] }\">\r\n          <template slot=\"label\">\r\n            <span>\r\n               事件类型\r\n               <el-tooltip placement=\"top\">\r\n                  <template slot=\"content\">\r\n                     <div>\r\n                              create（创建）：当任务已经创建，并且所有任务参数都已经设置时触发。\r\n                        <br />assignment（指派）：当任务已经指派给某人时触发。请注意：当流程执行到达用户任务时，\r\n                        <br />在触发create事件之前，会首先触发assignment事件。这顺序看起来不太自然，\r\n                        <br />但是有实际原因的：当收到create事件时，我们通常希望能看到任务的所有参数，包括办理人。\r\n                        <br />complete（完成）：当任务已经完成，从运行时数据中删除前触发。\r\n                        <br />delete（删除）：在任务即将被删除前触发。请注意任务由completeTask正常完成时也会触发。\r\n                     </div>\r\n                  </template>\r\n                  <i class=\"el-icon-question\" />\r\n               </el-tooltip>\r\n            </span>\r\n          </template>\r\n          <el-select v-model=\"listenerForm.event\">\r\n            <el-option v-for=\"i in Object.keys(listenerEventTypeObject)\" :key=\"i\" :label=\"listenerEventTypeObject[i]\" :value=\"i\" />\r\n          </el-select>\r\n        </el-form-item>\r\n<!--        <el-form-item label=\"监听器ID\" prop=\"id\" :rules=\"{ required: true, trigger: ['blur', 'change'] }\">-->\r\n<!--          <el-input v-model=\"listenerForm.id\" clearable />-->\r\n<!--        </el-form-item>-->\r\n        <el-form-item label=\"监听器类型\" prop=\"listenerType\" :rules=\"{ required: true, trigger: ['blur', 'change'] }\">\r\n          <template slot=\"label\">\r\n            <span>\r\n               监听类型\r\n               <el-tooltip placement=\"top\">\r\n                  <template slot=\"content\">\r\n                     <div>\r\n                              class：需要调用的委托类。这个类必须实现org.flowable.engine.delegate.TaskListener接口。\r\n                        <br />assignment（指派）：当任务已经指派给某人时触发。请注意：当流程执行到达用户任务时，\r\n                        <br />  在触发create事件之前，会首先触发assignment事件。这顺序看起来不太自然，\r\n                        <br />  但是有实际原因的：当收到create事件时，我们通常希望能看到任务的所有参数，包括办理人。\r\n                        <br />complete（完成）：当任务已经完成，从运行时数据中删除前触发。\r\n                        <br />delete（删除）：在任务即将被删除前触发。请注意任务由completeTask正常完成时也会触发。\r\n                     </div>\r\n                  </template>\r\n                  <i class=\"el-icon-question\" />\r\n               </el-tooltip>\r\n            </span>\r\n          </template>\r\n          <el-select v-model=\"listenerForm.listenerType\">\r\n            <el-option v-for=\"i in Object.keys(listenerTypeObject)\" :key=\"i\" :label=\"listenerTypeObject[i]\" :value=\"i\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item\r\n            v-if=\"listenerForm.listenerType === 'classListener'\"\r\n            label=\"Java类\"\r\n            prop=\"class\"\r\n            key=\"listener-class\"\r\n            :rules=\"{ required: true, trigger: ['blur', 'change'] }\"\r\n        >\r\n          <el-input v-model=\"listenerForm.class\" clearable />\r\n        </el-form-item>\r\n        <el-form-item\r\n            v-if=\"listenerForm.listenerType === 'expressionListener'\"\r\n            label=\"表达式\"\r\n            prop=\"expression\"\r\n            key=\"listener-expression\"\r\n            :rules=\"{ required: true, trigger: ['blur', 'change'] }\"\r\n        >\r\n          <el-input v-model=\"listenerForm.expression\" clearable />\r\n        </el-form-item>\r\n        <el-form-item\r\n            v-if=\"listenerForm.listenerType === 'delegateExpressionListener'\"\r\n            label=\"代理表达式\"\r\n            prop=\"delegateExpression\"\r\n            key=\"listener-delegate\"\r\n            :rules=\"{ required: true, trigger: ['blur', 'change'] }\"\r\n        >\r\n          <el-input v-model=\"listenerForm.delegateExpression\" clearable />\r\n        </el-form-item>\r\n        <template v-if=\"listenerForm.listenerType === 'scriptListener'\">\r\n          <el-form-item\r\n              label=\"脚本格式\"\r\n              prop=\"scriptFormat\"\r\n              key=\"listener-script-format\"\r\n              :rules=\"{ required: true, trigger: ['blur', 'change'], message: '请填写脚本格式' }\"\r\n          >\r\n            <el-input v-model=\"listenerForm.scriptFormat\" clearable />\r\n          </el-form-item>\r\n          <el-form-item\r\n              label=\"脚本类型\"\r\n              prop=\"scriptType\"\r\n              key=\"listener-script-type\"\r\n              :rules=\"{ required: true, trigger: ['blur', 'change'], message: '请选择脚本类型' }\"\r\n          >\r\n            <el-select v-model=\"listenerForm.scriptType\">\r\n              <el-option label=\"内联脚本\" value=\"inlineScript\" />\r\n              <el-option label=\"外部脚本\" value=\"externalScript\" />\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item\r\n              v-if=\"listenerForm.scriptType === 'inlineScript'\"\r\n              label=\"脚本内容\"\r\n              prop=\"value\"\r\n              key=\"listener-script\"\r\n              :rules=\"{ required: true, trigger: ['blur', 'change'], message: '请填写脚本内容' }\"\r\n          >\r\n            <el-input v-model=\"listenerForm.value\" clearable />\r\n          </el-form-item>\r\n          <el-form-item\r\n              v-if=\"listenerForm.scriptType === 'externalScript'\"\r\n              label=\"资源地址\"\r\n              prop=\"resource\"\r\n              key=\"listener-resource\"\r\n              :rules=\"{ required: true, trigger: ['blur', 'change'], message: '请填写资源地址' }\"\r\n          >\r\n            <el-input v-model=\"listenerForm.resource\" clearable />\r\n          </el-form-item>\r\n        </template>\r\n\r\n        <template v-if=\"listenerForm.event === 'timeout'\">\r\n          <el-form-item label=\"定时器类型\" prop=\"eventDefinitionType\" key=\"eventDefinitionType\">\r\n            <el-select v-model=\"listenerForm.eventDefinitionType\">\r\n              <el-option label=\"日期\" value=\"date\" />\r\n              <el-option label=\"持续时长\" value=\"duration\" />\r\n              <el-option label=\"循环\" value=\"cycle\" />\r\n              <el-option label=\"无\" value=\"null\" />\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item\r\n              v-if=\"!!listenerForm.eventDefinitionType && listenerForm.eventDefinitionType !== 'null'\"\r\n              label=\"定时器\"\r\n              prop=\"eventTimeDefinitions\"\r\n              key=\"eventTimeDefinitions\"\r\n              :rules=\"{ required: true, trigger: ['blur', 'change'], message: '请填写定时器配置' }\"\r\n          >\r\n            <el-input v-model=\"listenerForm.eventTimeDefinitions\" clearable />\r\n          </el-form-item>\r\n        </template>\r\n      </el-form>\r\n\r\n      <el-divider />\r\n      <p class=\"listener-filed__title\">\r\n        <span><i class=\"el-icon-menu\"></i>注入字段：</span>\r\n        <el-button size=\"small\" type=\"primary\" @click=\"openListenerFieldForm(null)\">添加字段</el-button>\r\n      </p>\r\n      <el-table :data=\"fieldsListOfListener\" size=\"mini\" max-height=\"240\" border fit style=\"flex: none\">\r\n        <el-table-column label=\"序号\" width=\"50px\" type=\"index\" />\r\n        <el-table-column label=\"字段名称\" width=\"80px\" prop=\"name\" />\r\n        <el-table-column label=\"字段类型\" width=\"80px\" show-overflow-tooltip :formatter=\"row => fieldTypeObject[row.fieldType]\" />\r\n        <el-table-column label=\"值内容\" width=\"80px\" show-overflow-tooltip :formatter=\"row => row.string || row.expression\" />\r\n        <el-table-column label=\"操作\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button size=\"mini\" type=\"primary\"  @click=\"openListenerFieldForm(scope.row, scope.$index)\">编辑</el-button>\r\n            <el-divider direction=\"vertical\" />\r\n            <el-button size=\"mini\" type=\"danger\" @click=\"removeListenerField(scope.row, scope.$index)\">移除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <div class=\"element-drawer__button\">\r\n        <el-button size=\"small\" @click=\"listenerFormModelVisible = false\">取 消</el-button>\r\n        <el-button size=\"small\" type=\"primary\" @click=\"saveListenerConfig\">保 存</el-button>\r\n      </div>\r\n    </el-drawer>\r\n\r\n    <!-- 注入西段 编辑/创建 部分 -->\r\n    <el-dialog title=\"字段配置\" :visible.sync=\"listenerFieldFormModelVisible\" width=\"600px\" append-to-body destroy-on-close>\r\n      <el-form :model=\"listenerFieldForm\"  label-width=\"96px\" ref=\"listenerFieldFormRef\" style=\"height: 136px\" @submit.native.prevent>\r\n        <el-form-item label=\"字段名称：\" prop=\"name\" :rules=\"{ required: true, trigger: ['blur', 'change'] }\">\r\n          <el-input v-model=\"listenerFieldForm.name\" clearable />\r\n        </el-form-item>\r\n        <el-form-item label=\"字段类型：\" prop=\"fieldType\" :rules=\"{ required: true, trigger: ['blur', 'change'] }\">\r\n          <el-select v-model=\"listenerFieldForm.fieldType\">\r\n            <el-option v-for=\"i in Object.keys(fieldTypeObject)\" :key=\"i\" :label=\"fieldTypeObject[i]\" :value=\"i\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item\r\n            v-if=\"listenerFieldForm.fieldType === 'string'\"\r\n            label=\"字段值：\"\r\n            prop=\"string\"\r\n            key=\"field-string\"\r\n            :rules=\"{ required: true, trigger: ['blur', 'change'] }\"\r\n        >\r\n          <el-input v-model=\"listenerFieldForm.string\" clearable />\r\n        </el-form-item>\r\n        <el-form-item\r\n            v-if=\"listenerFieldForm.fieldType === 'expression'\"\r\n            label=\"表达式：\"\r\n            prop=\"expression\"\r\n            key=\"field-expression\"\r\n            :rules=\"{ required: true, trigger: ['blur', 'change'] }\"\r\n        >\r\n          <el-input v-model=\"listenerFieldForm.expression\" clearable />\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button size=\"small\" @click=\"listenerFieldFormModelVisible= false\">取 消</el-button>\r\n          <el-button size=\"small\" type=\"primary\" @click=\"saveListenerFiled\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!-- 内置监听器 -->\r\n    <el-drawer :visible.sync=\"listenerSystemVisible\" title=\"任务监听器\" size=\"580px\" append-to-body destroy-on-close>\r\n      <el-table v-loading=\"loading\" :data=\"listenerList\" @selection-change=\"handleSelectionChange\">\r\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\r\n        <el-table-column label=\"名称\" align=\"center\" prop=\"name\" />\r\n        <el-table-column label=\"类型\" align=\"center\" prop=\"eventType\"/>\r\n        <el-table-column label=\"监听类型\" align=\"center\" prop=\"valueType\">\r\n          <template slot-scope=\"scope\">\r\n            <dict-tag :options=\"dict.type.sys_listener_value_type\" :value=\"scope.row.valueType\"/>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"执行内容\" align=\"center\" prop=\"value\" :show-overflow-tooltip=\"true\"/>\r\n      </el-table>\r\n\r\n      <pagination\r\n          v-show=\"total>0\"\r\n          :total=\"total\"\r\n          layout=\"prev, pager, next\"\r\n          :page.sync=\"queryParams.pageNum\"\r\n          :limit.sync=\"queryParams.pageSize\"\r\n          @pagination=\"getList\"\r\n      />\r\n\r\n      <div class=\"element-drawer__button\">\r\n        <el-button size=\"small\" @click=\"listenerSystemVisible = false\">取 消</el-button>\r\n        <el-button size=\"small\" type=\"primary\" :disabled=\"listenerSystemChecked\" @click=\"saveSystemListener\">保 存</el-button>\r\n      </div>\r\n    </el-drawer>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { listListener } from \"@/api/flowable/listener\";\r\nimport {\r\n  changeListenerObject,\r\n  createListenerObject,\r\n  createSystemListenerObject,\r\n  updateElementExtensions\r\n} from \"../common/bpmnUtils\";\r\n\r\nimport {StrUtil} from \"@/utils/StrUtil\";\r\n\r\nexport default {\r\n  name: \"TaskListener\",\r\n  // 内置监听器相关信息\r\n  dicts: ['sys_listener_value_type', 'sys_listener_event_type'],\r\n  /** 组件传值  */\r\n  props : {\r\n    id: {\r\n      type: String,\r\n      required: true\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      elementListenersList: [], // 监听器列表\r\n      listenerForm: {},// 监听器详情表单\r\n      listenerFormModelVisible: false, // 监听器 编辑 侧边栏显示状态\r\n      fieldsListOfListener: [],\r\n      bpmnElementListeners: [],\r\n      otherExtensionList: [],\r\n      listenerFieldForm: {}, // 监听器 注入字段 详情表单\r\n      listenerFieldFormModelVisible: false, // 监听器 注入字段表单弹窗 显示状态\r\n      editingListenerIndex: -1, // 监听器所在下标，-1 为新增\r\n      editingListenerFieldIndex: -1, // 字段所在下标，-1 为新增\r\n\r\n      listenerList: [],\r\n      checkedListenerData: [],\r\n      listenerSystemVisible: false,\r\n      listenerSystemChecked: true,\r\n      loading: true,\r\n      total: 0,\r\n      listenerTypeObject: {\r\n        classListener: \"Java 类\",\r\n        expressionListener: \"表达式\",\r\n        delegateExpressionListener: \"代理表达式\",\r\n        scriptListener: \"脚本\"\r\n      },\r\n      listenerEventTypeObject:{\r\n        create: \"创建\",\r\n        assignment: \"指派\",\r\n        complete: \"完成\",\r\n        delete: \"删除\",\r\n        // update: \"更新\",\r\n        // timeout: \"超时\"\r\n      },\r\n      fieldTypeObject:{\r\n        string: \"字符串\",\r\n        expression: \"表达式\"\r\n      },\r\n      queryParams: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n        type: 1,\r\n      },\r\n    }\r\n  },\r\n\r\n  /** 传值监听 */\r\n  watch: {\r\n    id: {\r\n      handler(newVal) {\r\n        if (StrUtil.isNotBlank(newVal)) {\r\n          this.resetListenersList();\r\n        }\r\n      },\r\n      immediate: true, // 立即生效\r\n    },\r\n  },\r\n  created() {\r\n    this.getList();\r\n\r\n  },\r\n  methods: {\r\n    resetListenersList() {\r\n      this.bpmnElementListeners =\r\n        this.modelerStore.element.businessObject?.extensionElements?.values?.filter(ex => ex.$type === `flowable:TaskListener`) ?? [];\r\n      this.elementListenersList = this.bpmnElementListeners.map(listener => this.initListenerType(listener));\r\n      this.$emit('getTaskListenerCount', this.elementListenersList.length)\r\n    },\r\n\r\n    // 打开 监听器详情 侧边栏\r\n    openListenerForm(listener, index) {\r\n      if (listener) {\r\n        this.listenerForm = this.initListenerForm(listener);\r\n        this.editingListenerIndex = index;\r\n      } else {\r\n        this.listenerForm = {};\r\n        this.editingListenerIndex = -1; // 标记为新增\r\n      }\r\n      if (listener && listener.fields) {\r\n        this.fieldsListOfListener = listener.fields.map(field => ({\r\n          ...field,\r\n          fieldType: field.string ? \"string\" : \"expression\"\r\n        }));\r\n      } else {\r\n        this.fieldsListOfListener = [];\r\n        this.$set(this.listenerForm, \"fields\", []);\r\n      }\r\n      // 打开侧边栏并清楚验证状态\r\n      this.listenerFormModelVisible = true;\r\n      this.$nextTick(() => {\r\n        if (this.$refs[\"listenerFormRef\"]) this.$refs[\"listenerFormRef\"].clearValidate();\r\n      });\r\n    },\r\n\r\n    // 打开监听器字段编辑弹窗\r\n    openListenerFieldForm(field, index) {\r\n      this.listenerFieldForm = field ? JSON.parse(JSON.stringify(field)) : {};\r\n      this.editingListenerFieldIndex = field ? index : -1;\r\n      this.listenerFieldFormModelVisible = true;\r\n      this.$nextTick(() => {\r\n        if (this.$refs[\"listenerFieldFormRef\"]) this.$refs[\"listenerFieldFormRef\"].clearValidate();\r\n      });\r\n    },\r\n\r\n    // 保存监听器注入字段\r\n    async saveListenerFiled() {\r\n      let validateStatus = await this.$refs[\"listenerFieldFormRef\"].validate();\r\n      if (!validateStatus) return; // 验证不通过直接返回\r\n      if (this.editingListenerFieldIndex === -1) {\r\n        this.fieldsListOfListener.push(this.listenerFieldForm);\r\n        this.listenerForm.fields.push(this.listenerFieldForm);\r\n      } else {\r\n        this.fieldsListOfListener.splice(this.editingListenerFieldIndex, 1, this.listenerFieldForm);\r\n        this.listenerForm.fields.splice(this.editingListenerFieldIndex, 1, this.listenerFieldForm);\r\n      }\r\n      this.listenerFieldFormModelVisible = false;\r\n      this.$nextTick(() => (this.listenerFieldForm = {}));\r\n    },\r\n\r\n    // 移除监听器字段\r\n    removeListenerField(field, index) {\r\n      this.$confirm(\"确认移除该字段吗？\", \"提示\", {\r\n        confirmButtonText: \"确 认\",\r\n        cancelButtonText: \"取 消\"\r\n      }).then(() => {\r\n        this.fieldsListOfListener.splice(index, 1);\r\n        this.listenerForm.fields.splice(index, 1);\r\n      }).catch(() => console.info(\"操作取消\"));\r\n    },\r\n\r\n    // 移除监听器\r\n    removeListener(listener, index) {\r\n      this.$confirm(\"确认移除该监听器吗？\", \"提示\", {\r\n        confirmButtonText: \"确 认\",\r\n        cancelButtonText: \"取 消\"\r\n      }).then(() => {\r\n        this.bpmnElementListeners.splice(index, 1);\r\n        this.elementListenersList.splice(index, 1);\r\n        updateElementExtensions(this.modelerStore.moddle, this.modelerStore.modeling, this.modelerStore.element, this.otherExtensionList.concat(this.bpmnElementListeners));\r\n        this.$emit('getTaskListenerCount', this.elementListenersList.length)\r\n      }).catch((r) => console.info(r, \"操作取消\"));\r\n    },\r\n\r\n    // 保存监听器配置\r\n    async saveListenerConfig() {\r\n      let validateStatus = await this.$refs[\"listenerFormRef\"].validate();\r\n      if (!validateStatus) return; // 验证不通过直接返回\r\n      const listenerObject = createListenerObject(this.modelerStore.moddle, this.listenerForm, false, \"flowable\");\r\n      if (this.editingListenerIndex === -1) {\r\n        this.bpmnElementListeners.push(listenerObject);\r\n        this.elementListenersList.push(this.listenerForm);\r\n      } else {\r\n        this.bpmnElementListeners.splice(this.editingListenerIndex, 1, listenerObject);\r\n        this.elementListenersList.splice(this.editingListenerIndex, 1, this.listenerForm);\r\n      }\r\n      // 保存其他配置\r\n      this.otherExtensionList = this.modelerStore.element.businessObject?.extensionElements?.values?.filter(ex => ex.$type !== `flowable:TaskListener`) ?? [];\r\n      updateElementExtensions(this.modelerStore.moddle, this.modelerStore.modeling, this.modelerStore.element, this.otherExtensionList.concat(this.bpmnElementListeners));\r\n      this.$emit('getTaskListenerCount', this.elementListenersList.length)\r\n      // 4. 隐藏侧边栏\r\n      this.listenerFormModelVisible = false;\r\n      this.listenerForm = {};\r\n    },\r\n\r\n    initListenerType(listener) {\r\n      let listenerType;\r\n      if (listener.class) listenerType = \"classListener\";\r\n      if (listener.expression) listenerType = \"expressionListener\";\r\n      if (listener.delegateExpression) listenerType = \"delegateExpressionListener\";\r\n      if (listener.script) listenerType = \"scriptListener\";\r\n      return {\r\n        ...JSON.parse(JSON.stringify(listener)),\r\n        ...(listener.script ?? {}),\r\n        listenerType: listenerType\r\n      };\r\n    },\r\n\r\n    // 初始化表单数据\r\n    initListenerForm(listener) {\r\n      let self = {\r\n        ...listener\r\n      };\r\n      if (listener.script) {\r\n        self = {\r\n          ...listener,\r\n          ...listener.script,\r\n          scriptType: listener.script.resource ? \"externalScript\" : \"inlineScript\"\r\n        };\r\n      }\r\n      if (listener.event === \"timeout\" && listener.eventDefinitions) {\r\n        if (listener.eventDefinitions.length) {\r\n          let k = \"\";\r\n          for (let key in listener.eventDefinitions[0]) {\r\n            console.log(listener.eventDefinitions, key);\r\n            if (key.indexOf(\"time\") !== -1) {\r\n              k = key;\r\n              self.eventDefinitionType = key.replace(\"time\", \"\").toLowerCase();\r\n            }\r\n          }\r\n          console.log(k);\r\n          self.eventTimeDefinitions = listener.eventDefinitions[0][k].body;\r\n        }\r\n      }\r\n      return self;\r\n    },\r\n\r\n\r\n    /** 查询流程达式列表 */\r\n    getList() {\r\n      this.loading = true;\r\n      listListener(this.queryParams).then(response => {\r\n        this.listenerList = response.rows;\r\n        this.total = response.total;\r\n        this.loading = false;\r\n      });\r\n    },\r\n\r\n    // 多选框选中数据\r\n    handleSelectionChange(selection) {\r\n      // ids.value = selection.map(item => item.id);\r\n      // TODO 应该使用 push?\r\n      this.checkedListenerData = selection;\r\n      this.listenerSystemChecked = selection.length !== 1;\r\n    },\r\n\r\n    // 保存内置监听器\r\n    saveSystemListener() {\r\n      if (this.checkedListenerData.length > 0) {\r\n        this.checkedListenerData.forEach(value => {\r\n          // 保存其他配置\r\n          const listenerObject = createSystemListenerObject(this.modelerStore.moddle, value, true, \"flowable\");\r\n          this.bpmnElementListeners.push(listenerObject);\r\n          this.elementListenersList.push(changeListenerObject(value));\r\n          this.otherExtensionList = this.modelerStore.element.businessObject?.extensionElements?.values?.filter(ex => ex.$type !== `flowable:TaskListener`) ?? [];\r\n          updateElementExtensions(this.modelerStore.moddle, this.modelerStore.modeling, this.modelerStore.element, this.otherExtensionList.concat(this.bpmnElementListeners));\r\n        })\r\n        // 回传显示数量\r\n        this.$emit('getTaskListenerCount', this.elementListenersList.length)\r\n      }\r\n      this.checkedListenerData = [];\r\n      this.listenerSystemChecked = true;\r\n      // 隐藏侧边栏\r\n      this.listenerSystemVisible = false;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import '../style/process-panel';\r\n.flow-containers  .el-badge__content.is-fixed {\r\n  top: 18px;\r\n}\r\n.dialog-footer button:first-child {\r\n  margin-right: 10px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]}]}