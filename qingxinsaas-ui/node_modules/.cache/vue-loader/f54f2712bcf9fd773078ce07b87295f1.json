{"remainingRequest":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\src\\components\\Process\\viewer\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\src\\components\\Process\\viewer\\index.vue","mtime":1733705220403},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBDdXN0b21WaWV3ZXIgYXMgQnBtblZpZXdlciB9IGZyb20gIkAvY29tcG9uZW50cy9Qcm9jZXNzL2NvbW1vbiI7DQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJCcG1uVmlld2VyIiwNCiAgLyoqIOe7hOS7tuS8oOWAvCAgKi8NCiAgcHJvcHM6IHsNCiAgICAvLyDlm57mmL7mlbDmja7kvKDlgLwNCiAgICBmbG93RGF0YTogew0KICAgICAgdHlwZTogT2JqZWN0LA0KICAgICAgZGVmYXVsdDogKCkgPT4gew0KICAgICAgfSwNCiAgICAgIHJlcXVpcmVkOiBmYWxzZQ0KICAgIH0sDQogICAgcHJvY0luc0lkOiB7DQogICAgICB0eXBlOiBTdHJpbmcsDQogICAgICBkZWZhdWx0OiAnJw0KICAgIH0sDQogIH0sDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgICBicG1uVmlld2VyOiBudWxsLA0KICAgICAgIGZsb3dEZXRhaWw6IHt9LA0KICAgICAgIGxvYWRpbmc6IHRydWUsDQogICAgfQ0KICB9LA0KICAvKiog5Lyg5YC855uR5ZCsICovDQogIHdhdGNoOiB7DQogICAgZmxvd0RhdGE6IHsNCiAgICAgIGhhbmRsZXIobmV3VmFsdWUpIHsNCiAgICAgICAgaWYgKE9iamVjdC5rZXlzKG5ld1ZhbHVlKS5sZW5ndGggPiAwKSB7DQogICAgICAgICAgLy8g55Sf5oiQ5a6e5L6LDQogICAgICAgICAgdGhpcy5icG1uVmlld2VyICYmIHRoaXMuYnBtblZpZXdlci5kZXN0cm95KCk7DQogICAgICAgICAgdGhpcy5icG1uVmlld2VyID0gbmV3IEJwbW5WaWV3ZXIoew0KICAgICAgICAgICAgY29udGFpbmVyOiB0aGlzLiRyZWZzLmZsb3dDYW52YXMsDQogICAgICAgICAgICBoZWlnaHQ6ICdjYWxjKDEwMHZoIC0gMjAwcHgpJywNCiAgICAgICAgICB9KTsNCiAgICAgICAgICB0aGlzLmxvYWRGbG93Q2FudmFzKG5ld1ZhbHVlKTsNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0sDQogIH0sDQogIGNyZWF0ZWQoKSB7DQoNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIC8vIOWKoOi9vea1geeoi+WbvueJhw0KICAgIGFzeW5jIGxvYWRGbG93Q2FudmFzKGZsb3dEYXRhKSB7DQogICAgICB0cnkgew0KICAgICAgICBhd2FpdCB0aGlzLmJwbW5WaWV3ZXIuaW1wb3J0WE1MKGZsb3dEYXRhLnhtbERhdGEpOw0KICAgICAgICBhd2FpdCB0aGlzLmZpdFZpZXdwb3J0KCk7DQogICAgICAgIC8vIOa1geeoi+e6v+mrmOS6ruiuvue9rg0KICAgICAgICBpZiAoZmxvd0RhdGEubm9kZURhdGEgIT09IHVuZGVmaW5lZCAmJiBmbG93RGF0YS5ub2RlRGF0YS5sZW5ndGggPiAwICYmIHRoaXMucHJvY0luc0lkKSB7DQogICAgICAgICAgYXdhaXQgdGhpcy5maWxsQ29sb3IoZmxvd0RhdGEubm9kZURhdGEpOw0KICAgICAgICB9DQogICAgICB9IGNhdGNoIChlcnIpIHsNCiAgICAgICAgY29uc29sZS5lcnJvcihlcnIubWVzc2FnZSwgZXJyLndhcm5pbmdzKQ0KICAgICAgfQ0KICAgIH0sDQoNCiAgICAvLyDorqnlm77og73oh6rpgILlupTlsY/luZUNCiAgICBmaXRWaWV3cG9ydCgpIHsNCiAgICAgIHRoaXMuem9vbSA9IHRoaXMuYnBtblZpZXdlci5nZXQoJ2NhbnZhcycpLnpvb20oImZpdC12aWV3cG9ydCIsICJhdXRvIik7DQogICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsNCiAgICB9LA0KDQogICAgLy8g5pS+5aSn57yp5bCPDQogICAgem9vbVZpZXdwb3J0KHpvb21JbiA9IHRydWUpIHsNCiAgICAgIHRoaXMuem9vbSA9IHRoaXMuYnBtblZpZXdlci5nZXQoJ2NhbnZhcycpLnpvb20oKQ0KICAgICAgdGhpcy56b29tICs9ICh6b29tSW4gPyAwLjEgOiAtMC4xKQ0KICAgICAgaWYgKHRoaXMuem9vbSA+PSAwLjIpIHRoaXMuYnBtblZpZXdlci5nZXQoJ2NhbnZhcycpLnpvb20odGhpcy56b29tKTsNCiAgICB9LA0KDQogICAgLy8g6K6+572u6auY5Lqu6aKc6Imy55qEDQogICAgZmlsbENvbG9yKG5vZGVEYXRhKSB7DQogICAgICBjb25zdCBjYW52YXMgPSB0aGlzLmJwbW5WaWV3ZXIuZ2V0KCdjYW52YXMnKQ0KICAgICAgdGhpcy5icG1uVmlld2VyLmdldERlZmluaXRpb25zKCkucm9vdEVsZW1lbnRzWzBdLmZsb3dFbGVtZW50cy5mb3JFYWNoKG4gPT4gew0KICAgICAgICBjb25zdCBjb21wbGV0ZVRhc2sgPSBub2RlRGF0YS5maW5kKG0gPT4gbS5rZXkgPT09IG4uaWQpDQogICAgICAgIGNvbnN0IHRvZG9UYXNrID0gbm9kZURhdGEuZmluZChtID0+ICFtLmNvbXBsZXRlZCkNCiAgICAgICAgY29uc3QgZW5kVGFzayA9IG5vZGVEYXRhW25vZGVEYXRhLmxlbmd0aCAtIDFdDQogICAgICAgIGlmIChuLiR0eXBlID09PSAnYnBtbjpVc2VyVGFzaycpIHsNCiAgICAgICAgICBpZiAoY29tcGxldGVUYXNrKSB7DQogICAgICAgICAgICBjYW52YXMuYWRkTWFya2VyKG4uaWQsIGNvbXBsZXRlVGFzay5jb21wbGV0ZWQgPyAnaGlnaGxpZ2h0JyA6ICdoaWdobGlnaHQtdG9kbycpDQogICAgICAgICAgICBuLm91dGdvaW5nPy5mb3JFYWNoKG5uID0+IHsNCiAgICAgICAgICAgICAgY29uc3QgdGFyZ2V0VGFzayA9IG5vZGVEYXRhLmZpbmQobSA9PiBtLmtleSA9PT0gbm4udGFyZ2V0UmVmLmlkKQ0KICAgICAgICAgICAgICBpZiAodGFyZ2V0VGFzaykgew0KICAgICAgICAgICAgICAgIGlmICh0b2RvVGFzayAmJiBjb21wbGV0ZVRhc2sua2V5ID09PSB0b2RvVGFzay5rZXkgJiYgIXRvZG9UYXNrLmNvbXBsZXRlZCkgew0KICAgICAgICAgICAgICAgICAgY2FudmFzLmFkZE1hcmtlcihubi5pZCwgdG9kb1Rhc2suY29tcGxldGVkID8gJ2hpZ2hsaWdodCcgOiAnaGlnaGxpZ2h0LXRvZG8nKQ0KICAgICAgICAgICAgICAgICAgY2FudmFzLmFkZE1hcmtlcihubi50YXJnZXRSZWYuaWQsIHRvZG9UYXNrLmNvbXBsZXRlZCA/ICdoaWdobGlnaHQnIDogJ2hpZ2hsaWdodC10b2RvJykNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgY2FudmFzLmFkZE1hcmtlcihubi5pZCwgdGFyZ2V0VGFzay5jb21wbGV0ZWQgPyAnaGlnaGxpZ2h0JyA6ICdoaWdobGlnaHQtdG9kbycpDQogICAgICAgICAgICAgICAgICBjYW52YXMuYWRkTWFya2VyKG5uLnRhcmdldFJlZi5pZCwgdGFyZ2V0VGFzay5jb21wbGV0ZWQgPyAnaGlnaGxpZ2h0JyA6ICdoaWdobGlnaHQtdG9kbycpDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KQ0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICAvLyDmjpLku5bnvZHlhbMNCiAgICAgICAgZWxzZSBpZiAobi4kdHlwZSA9PT0gJ2JwbW46RXhjbHVzaXZlR2F0ZXdheScpIHsNCiAgICAgICAgICBpZiAoY29tcGxldGVUYXNrKSB7DQogICAgICAgICAgICBjYW52YXMuYWRkTWFya2VyKG4uaWQsIGNvbXBsZXRlVGFzay5jb21wbGV0ZWQgPyAnaGlnaGxpZ2h0JyA6ICdoaWdobGlnaHQtdG9kbycpDQogICAgICAgICAgICBuLm91dGdvaW5nPy5mb3JFYWNoKG5uID0+IHsNCiAgICAgICAgICAgICAgY29uc3QgdGFyZ2V0VGFzayA9IG5vZGVEYXRhLmZpbmQobSA9PiBtLmtleSA9PT0gbm4udGFyZ2V0UmVmLmlkKQ0KICAgICAgICAgICAgICBpZiAodGFyZ2V0VGFzaykgew0KDQogICAgICAgICAgICAgICAgY2FudmFzLmFkZE1hcmtlcihubi5pZCwgdGFyZ2V0VGFzay5jb21wbGV0ZWQgPyAnaGlnaGxpZ2h0JyA6ICdoaWdobGlnaHQtdG9kbycpDQogICAgICAgICAgICAgICAgY2FudmFzLmFkZE1hcmtlcihubi50YXJnZXRSZWYuaWQsIHRhcmdldFRhc2suY29tcGxldGVkID8gJ2hpZ2hsaWdodCcgOiAnaGlnaGxpZ2h0LXRvZG8nKQ0KICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KQ0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICAvLyDlubbooYznvZHlhbMNCiAgICAgICAgZWxzZSBpZiAobi4kdHlwZSA9PT0gJ2JwbW46UGFyYWxsZWxHYXRld2F5Jykgew0KICAgICAgICAgIGlmIChjb21wbGV0ZVRhc2spIHsNCiAgICAgICAgICAgIGNhbnZhcy5hZGRNYXJrZXIobi5pZCwgY29tcGxldGVUYXNrLmNvbXBsZXRlZCA/ICdoaWdobGlnaHQnIDogJ2hpZ2hsaWdodC10b2RvJykNCiAgICAgICAgICAgIG4ub3V0Z29pbmc/LmZvckVhY2gobm4gPT4gew0KICAgICAgICAgICAgICBjb25zdCB0YXJnZXRUYXNrID0gbm9kZURhdGEuZmluZChtID0+IG0ua2V5ID09PSBubi50YXJnZXRSZWYuaWQpDQogICAgICAgICAgICAgIGlmICh0YXJnZXRUYXNrKSB7DQogICAgICAgICAgICAgICAgY2FudmFzLmFkZE1hcmtlcihubi5pZCwgdGFyZ2V0VGFzay5jb21wbGV0ZWQgPyAnaGlnaGxpZ2h0JyA6ICdoaWdobGlnaHQtdG9kbycpDQogICAgICAgICAgICAgICAgY2FudmFzLmFkZE1hcmtlcihubi50YXJnZXRSZWYuaWQsIHRhcmdldFRhc2suY29tcGxldGVkID8gJ2hpZ2hsaWdodCcgOiAnaGlnaGxpZ2h0LXRvZG8nKQ0KICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KQ0KICAgICAgICAgIH0NCiAgICAgICAgfSBlbHNlIGlmIChuLiR0eXBlID09PSAnYnBtbjpTdGFydEV2ZW50Jykgew0KICAgICAgICAgIG4ub3V0Z29pbmcuZm9yRWFjaChubiA9PiB7DQogICAgICAgICAgICBjb25zdCBjb21wbGV0ZVRhc2sgPSBub2RlRGF0YS5maW5kKG0gPT4gbS5rZXkgPT09IG5uLnRhcmdldFJlZi5pZCkNCiAgICAgICAgICAgIGlmIChjb21wbGV0ZVRhc2spIHsNCiAgICAgICAgICAgICAgY2FudmFzLmFkZE1hcmtlcihubi5pZCwgJ2hpZ2hsaWdodCcpDQogICAgICAgICAgICAgIGNhbnZhcy5hZGRNYXJrZXIobi5pZCwgJ2hpZ2hsaWdodCcpDQogICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9KQ0KICAgICAgICB9IGVsc2UgaWYgKG4uJHR5cGUgPT09ICdicG1uOkVuZEV2ZW50Jykgew0KICAgICAgICAgIGlmIChlbmRUYXNrLmtleSA9PT0gbi5pZCAmJiBlbmRUYXNrLmNvbXBsZXRlZCkgew0KICAgICAgICAgICAgY2FudmFzLmFkZE1hcmtlcihuLmlkLCAnaGlnaGxpZ2h0JykNCiAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgIH0pDQogICAgfQ0KICAgIH0NCn0NCg0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/Process/viewer","sourcesContent":["<template>\r\n  <div class=\"containers\">\r\n    <el-container style=\"align-items: stretch\">\r\n      <el-main class=\"flow-viewer\">\r\n        <div class=\"process-status\">\r\n          <span class=\"intro\">状态：</span>\r\n          <div class=\"finish\">已办理</div>\r\n          <div class=\"processing\">处理中</div>\r\n          <div class=\"todo\">未进行</div>\r\n        </div>\r\n        <!-- 流程图显示 -->\r\n        <div v-loading=\"loading\" class=\"canvas\" ref=\"flowCanvas\"></div>\r\n        <!--  按钮区域  -->\r\n        <el-button-group class=\"button-group\">\r\n          <el-tooltip effect=\"dark\" content=\"适中\" placement=\"bottom\">\r\n            <el-button size=\"small\" icon=\"el-icon-rank\" @click=\"fitViewport\" />\r\n          </el-tooltip>\r\n          <el-tooltip effect=\"dark\" content=\"放大\" placement=\"bottom\">\r\n            <el-button size=\"small\" icon=\"el-icon-zoom-in\" @click=\"zoomViewport(true)\" />\r\n          </el-tooltip>\r\n          <el-tooltip effect=\"dark\" content=\"缩小\" placement=\"bottom\">\r\n            <el-button size=\"small\" icon=\"el-icon-zoom-out\" @click=\"zoomViewport(false)\" />\r\n          </el-tooltip>\r\n        </el-button-group>\r\n      </el-main>\r\n    </el-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { CustomViewer as BpmnViewer } from \"@/components/Process/common\";\r\nexport default {\r\n  name: \"BpmnViewer\",\r\n  /** 组件传值  */\r\n  props: {\r\n    // 回显数据传值\r\n    flowData: {\r\n      type: Object,\r\n      default: () => {\r\n      },\r\n      required: false\r\n    },\r\n    procInsId: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n       bpmnViewer: null,\r\n       flowDetail: {},\r\n       loading: true,\r\n    }\r\n  },\r\n  /** 传值监听 */\r\n  watch: {\r\n    flowData: {\r\n      handler(newValue) {\r\n        if (Object.keys(newValue).length > 0) {\r\n          // 生成实例\r\n          this.bpmnViewer && this.bpmnViewer.destroy();\r\n          this.bpmnViewer = new BpmnViewer({\r\n            container: this.$refs.flowCanvas,\r\n            height: 'calc(100vh - 200px)',\r\n          });\r\n          this.loadFlowCanvas(newValue);\r\n        }\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n\r\n  },\r\n  methods: {\r\n    // 加载流程图片\r\n    async loadFlowCanvas(flowData) {\r\n      try {\r\n        await this.bpmnViewer.importXML(flowData.xmlData);\r\n        await this.fitViewport();\r\n        // 流程线高亮设置\r\n        if (flowData.nodeData !== undefined && flowData.nodeData.length > 0 && this.procInsId) {\r\n          await this.fillColor(flowData.nodeData);\r\n        }\r\n      } catch (err) {\r\n        console.error(err.message, err.warnings)\r\n      }\r\n    },\r\n\r\n    // 让图能自适应屏幕\r\n    fitViewport() {\r\n      this.zoom = this.bpmnViewer.get('canvas').zoom(\"fit-viewport\", \"auto\");\r\n      this.loading = false;\r\n    },\r\n\r\n    // 放大缩小\r\n    zoomViewport(zoomIn = true) {\r\n      this.zoom = this.bpmnViewer.get('canvas').zoom()\r\n      this.zoom += (zoomIn ? 0.1 : -0.1)\r\n      if (this.zoom >= 0.2) this.bpmnViewer.get('canvas').zoom(this.zoom);\r\n    },\r\n\r\n    // 设置高亮颜色的\r\n    fillColor(nodeData) {\r\n      const canvas = this.bpmnViewer.get('canvas')\r\n      this.bpmnViewer.getDefinitions().rootElements[0].flowElements.forEach(n => {\r\n        const completeTask = nodeData.find(m => m.key === n.id)\r\n        const todoTask = nodeData.find(m => !m.completed)\r\n        const endTask = nodeData[nodeData.length - 1]\r\n        if (n.$type === 'bpmn:UserTask') {\r\n          if (completeTask) {\r\n            canvas.addMarker(n.id, completeTask.completed ? 'highlight' : 'highlight-todo')\r\n            n.outgoing?.forEach(nn => {\r\n              const targetTask = nodeData.find(m => m.key === nn.targetRef.id)\r\n              if (targetTask) {\r\n                if (todoTask && completeTask.key === todoTask.key && !todoTask.completed) {\r\n                  canvas.addMarker(nn.id, todoTask.completed ? 'highlight' : 'highlight-todo')\r\n                  canvas.addMarker(nn.targetRef.id, todoTask.completed ? 'highlight' : 'highlight-todo')\r\n                } else {\r\n                  canvas.addMarker(nn.id, targetTask.completed ? 'highlight' : 'highlight-todo')\r\n                  canvas.addMarker(nn.targetRef.id, targetTask.completed ? 'highlight' : 'highlight-todo')\r\n                }\r\n              }\r\n            })\r\n          }\r\n        }\r\n        // 排他网关\r\n        else if (n.$type === 'bpmn:ExclusiveGateway') {\r\n          if (completeTask) {\r\n            canvas.addMarker(n.id, completeTask.completed ? 'highlight' : 'highlight-todo')\r\n            n.outgoing?.forEach(nn => {\r\n              const targetTask = nodeData.find(m => m.key === nn.targetRef.id)\r\n              if (targetTask) {\r\n\r\n                canvas.addMarker(nn.id, targetTask.completed ? 'highlight' : 'highlight-todo')\r\n                canvas.addMarker(nn.targetRef.id, targetTask.completed ? 'highlight' : 'highlight-todo')\r\n              }\r\n            })\r\n          }\r\n        }\r\n        // 并行网关\r\n        else if (n.$type === 'bpmn:ParallelGateway') {\r\n          if (completeTask) {\r\n            canvas.addMarker(n.id, completeTask.completed ? 'highlight' : 'highlight-todo')\r\n            n.outgoing?.forEach(nn => {\r\n              const targetTask = nodeData.find(m => m.key === nn.targetRef.id)\r\n              if (targetTask) {\r\n                canvas.addMarker(nn.id, targetTask.completed ? 'highlight' : 'highlight-todo')\r\n                canvas.addMarker(nn.targetRef.id, targetTask.completed ? 'highlight' : 'highlight-todo')\r\n              }\r\n            })\r\n          }\r\n        } else if (n.$type === 'bpmn:StartEvent') {\r\n          n.outgoing.forEach(nn => {\r\n            const completeTask = nodeData.find(m => m.key === nn.targetRef.id)\r\n            if (completeTask) {\r\n              canvas.addMarker(nn.id, 'highlight')\r\n              canvas.addMarker(n.id, 'highlight')\r\n              return;\r\n            }\r\n          })\r\n        } else if (n.$type === 'bpmn:EndEvent') {\r\n          if (endTask.key === n.id && endTask.completed) {\r\n            canvas.addMarker(n.id, 'highlight')\r\n            return;\r\n          }\r\n        }\r\n      })\r\n    }\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"../style/flow-viewer.scss\";\r\n</style>\r\n"]}]}