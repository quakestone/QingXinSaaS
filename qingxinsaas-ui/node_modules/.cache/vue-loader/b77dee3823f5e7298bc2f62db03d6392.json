{"remainingRequest":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\src\\views\\flowable\\definition\\model.vue?vue&type=style&index=0&id=4481906a&lang=scss&scoped=true","dependencies":[{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\src\\views\\flowable\\definition\\model.vue","mtime":1733705220542},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmNvbnRlbnQtYm94ew0KICBsaW5lLWhlaWdodDogMTBweDsNCn0NCi8vIOS/ruaUueWvueivneahhumrmOW6pg0KLnNob3dBbGxfZGlhbG9nIHsNCiAgZGlzcGxheTogZmxleDsNCiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogIG92ZXJmbG93OiBoaWRkZW47DQogIDo6di1kZWVwIC5lbC1kaWFsb2cgew0KICAgIG1hcmdpbjogMCBhdXRvICFpbXBvcnRhbnQ7DQogICAgaGVpZ2h0OiA4MCU7DQogICAgb3ZlcmZsb3c6IGhpZGRlbjsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOw0KICAgIC5lbC1kaWFsb2dfX2JvZHkgew0KICAgICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgICAgbGVmdDogMDsNCiAgICAgIHRvcDogNTRweDsNCiAgICAgIGJvdHRvbTogMDsNCiAgICAgIHJpZ2h0OiAwOw0KICAgICAgei1pbmRleDogMTsNCiAgICAgIG92ZXJmbG93OiBoaWRkZW47DQogICAgICBvdmVyZmxvdy15OiBhdXRvOw0KICAgICAgLy8g5LiL6L656K6+572u5a2X5L2T77yM5oiR55qE6ZyA5rGC5piv6buR5bqV55m95a2XDQogICAgICBjb2xvcjogI2ZmZmZmZjsNCiAgICAgIHBhZGRpbmc6IDAgMTVweDsNCiAgICB9DQogIH0NCn0NCg=="},{"version":3,"sources":["model.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"model.vue","sourceRoot":"src/views/flowable/definition","sourcesContent":["<template>\r\n  <div>\r\n    <bpmn-model\r\n      v-if=\"dataExit\"\r\n      :xml=\"xml\"\r\n      :is-view=\"false\"\r\n      @save=\"save\"\r\n      @showXML=\"showXML\"\r\n    />\r\n    <!--在线查看xml-->\r\n    <el-drawer :title=\"xmlTitle\" :modal=\"false\" direction=\"rtl\" :visible.sync=\"xmlOpen\" size=\"60%\">\r\n      <!-- 设置对话框内容高度 -->\r\n        <el-scrollbar>\r\n            <pre v-highlight=\"xmlData\"><code class=\"xml\"></code></pre>\r\n        </el-scrollbar>\r\n    </el-drawer>\r\n  </div>\r\n</template>\r\n<script>\r\nimport {readXml, roleList, saveXml, userList,expList} from \"@/api/flowable/definition\";\r\nimport BpmnModel from '@/components/Process'\r\nimport vkBeautify from 'vkbeautify'\r\nimport hljs from 'highlight.js'\r\nimport 'highlight.js/styles/atelier-savanna-dark.css'\r\nexport default {\r\n  name: \"Model\",\r\n  components: {\r\n    BpmnModel,\r\n    vkBeautify\r\n  },\r\n  // 自定义指令\r\n  directives: {\r\n    deep: true,\r\n    highlight:{\r\n      deep: true,\r\n      bind: function bind(el, binding) {\r\n        const targets = el.querySelectorAll('code');\r\n        let target;\r\n        let i;\r\n        for (i = 0; i < targets.length; i += 1) {\r\n          target = targets[i];\r\n          if (typeof binding.value === 'string') {\r\n            target.textContent = binding.value;\r\n          }\r\n          hljs.highlightBlock(target);\r\n        }\r\n      },\r\n      componentUpdated: function componentUpdated(el, binding) {\r\n        const targets = el.querySelectorAll('code');\r\n        let target;\r\n        let i;\r\n        for (i = 0; i < targets.length; i += 1) {\r\n          target = targets[i];\r\n          if (typeof binding.value === 'string') {\r\n            target.textContent = binding.value;\r\n            hljs.highlightBlock(target);\r\n          }\r\n        }\r\n      },\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      xml: \"\", // 后端查询到的xml\r\n      modeler:\"\",\r\n      dataExit: false,\r\n      xmlOpen: false,\r\n      xmlTitle: '',\r\n      xmlData: '',\r\n    };\r\n  },\r\n  created () {\r\n    const deployId = this.$route.query && this.$route.query.deployId;\r\n    //  查询流程xml\r\n    if (deployId) {\r\n      this.getXmlData(deployId);\r\n    }\r\n    this.getDataList()\r\n  },\r\n  methods: {\r\n    /** xml 文件 */\r\n    getXmlData(deployId) {\r\n      // 发送请求，获取xml\r\n      readXml(deployId).then(res =>{\r\n        this.xml = res.data;\r\n        this.modeler = res.data\r\n      })\r\n    },\r\n    /** 保存xml */\r\n    save(data) {\r\n      const params = {\r\n        name: data.process.name,\r\n        category: data.process.category,\r\n        xml: data.xml\r\n      }\r\n      saveXml(params).then(res => {\r\n        this.$modal.msgSuccess(res.msg)\r\n        // 关闭当前标签页并返回上个页面\r\n        const obj = { path: \"/flowable/definition\", query: { t: Date.now()} };\r\n        this.$tab.closeOpenPage(obj);\r\n      })\r\n    },\r\n    /** 指定流程办理人员列表 */\r\n    getDataList() {\r\n      userList().then(res => {\r\n        this.modelerStore.userList = res.data;\r\n      })\r\n      roleList().then(res => {\r\n        this.modelerStore.roleList = res.data;\r\n      })\r\n      expList().then(res => {\r\n        this.modelerStore.expList = res.data;\r\n        this.dataExit = true;\r\n      });\r\n    },\r\n    /** 展示xml */\r\n    showXML(xmlData){\r\n      this.xmlTitle = 'xml查看';\r\n      this.xmlOpen = true;\r\n      this.xmlData = vkBeautify.xml(xmlData);\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.content-box{\r\n  line-height: 10px;\r\n}\r\n// 修改对话框高度\r\n.showAll_dialog {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  overflow: hidden;\r\n  ::v-deep .el-dialog {\r\n    margin: 0 auto !important;\r\n    height: 80%;\r\n    overflow: hidden;\r\n    background-color: #ffffff;\r\n    .el-dialog__body {\r\n      position: absolute;\r\n      left: 0;\r\n      top: 54px;\r\n      bottom: 0;\r\n      right: 0;\r\n      z-index: 1;\r\n      overflow: hidden;\r\n      overflow-y: auto;\r\n      // 下边设置字体，我的需求是黑底白字\r\n      color: #ffffff;\r\n      padding: 0 15px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}