{"remainingRequest":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\src\\views\\flowable\\task\\flowForm\\index.vue?vue&type=style&index=0&id=9c25cd1c&lang=scss&scoped=true","dependencies":[{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\src\\views\\flowable\\task\\flowForm\\index.vue","mtime":1733705220549},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCmJvZHkgew0KICBtYXJnaW46IDA7ICAvKiDlpoLmnpzpobXpnaLlh7rnjrDlnoLnm7Tmu5rliqjmnaHvvIzliJnliqDlhaXmraTooYxDU1Pku6XmtojpmaTkuYsgKi8NCn0NCi5lbC1jb250YWluZXIubWFpbi1jb250YWluZXJ7DQogIGJhY2tncm91bmQ6ICNmZmY7DQogIG1hcmdpbi1sZWZ0OiAwICFpbXBvcnRhbnQ7DQp9DQoNCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkHA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/flowable/task/flowForm","sourcesContent":["<template>\r\n  <div>\r\n  <v-form-designer ref=\"vfDesigner\" :designer-config=\"designerConfig\">\r\n    <!-- 保存按钮 -->\r\n    <template #customSaveButton>\r\n      <el-button type=\"text\" @click=\"saveFormJson\"><i class=\"el-icon-s-promotion\" />保存</el-button>\r\n    </template>\r\n  </v-form-designer>\r\n\r\n  <!--系统表单信息-->\r\n  <el-dialog :title=\"formTitle\" :visible.sync=\"formOpen\" width=\"500px\" append-to-body>\r\n    <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\r\n      <el-form-item label=\"表单名称\" prop=\"formName\">\r\n        <el-input v-model=\"form.formName\" placeholder=\"请输入表单名称\" />\r\n      </el-form-item>\r\n      <el-form-item label=\"备注\" prop=\"remark\">\r\n        <el-input v-model=\"form.remark\" placeholder=\"请输入备注\" />\r\n      </el-form-item>\r\n    </el-form>\r\n    <div slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\r\n      <el-button @click=\"cancel\">取 消</el-button>\r\n    </div>\r\n  </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {addForm, getForm, updateForm} from \"@/api/flowable/form\";\r\nimport { StrUtil } from '@/utils/StrUtil'\r\n\r\nexport default {\r\n  name: \"flowForm\",\r\n  data() {\r\n    return {\r\n      formTitle: \"\",\r\n      formOpen: false,\r\n      // 表单校验\r\n      rules: {\r\n        formName: [\r\n          { required: true, message: \"表单名称不能为空\", trigger: \"blur\" }\r\n        ]\r\n      },\r\n      // 表单参数\r\n      form: {\r\n        formId: null,\r\n        formName: null,\r\n        formContent: null,\r\n        remark: null\r\n      },\r\n      designerConfig: {\r\n        generateSFCButton: false,\r\n        exportCodeButton: false,  //是否显示导出代码按钮\r\n        toolbarMaxWidth: 320,\r\n        toolbarMinWidth: 300,  //设计器工具按钮栏最小宽度（单位像素）\r\n        formHeader: false,\r\n      },\r\n    }\r\n  },\r\n  mounted() {\r\n    const formId = this.$route.query && this.$route.query.formId;\r\n    if (StrUtil.isNotBlank(formId)) {\r\n      getForm(formId).then(res => {\r\n        this.$nextTick(() => {\r\n          // 加载表单json数据\r\n          this.$refs.vfDesigner.setFormJson(JSON.parse(res.data.formContent))\r\n        })\r\n        this.form = res.data;\r\n      })\r\n    }else {\r\n      this.$nextTick(() => {\r\n        // 加载表单json数据\r\n        this.$refs.vfDesigner.setFormJson({\"widgetList\":[],\"formConfig\":{\"modelName\":\"formData\",\"refName\":\"vForm\",\"rulesName\":\"rules\",\"labelWidth\":80,\"labelPosition\":\"left\",\"size\":\"\",\"labelAlign\":\"label-left-align\",\"cssCode\":\"\",\"customClass\":\"\",\"functions\":\"\",\"layoutType\":\"PC\",\"onFormCreated\":\"\",\"onFormMounted\":\"\",\"onFormDataChange\":\"\",\"onFormValidate\":\"\"}})\r\n      })\r\n    }\r\n  },\r\n  methods:{\r\n    // 保存表单数据\r\n    saveFormJson() {\r\n      let formJson = this.$refs.vfDesigner.getFormJson()\r\n      this.form.formContent = JSON.stringify(formJson);\r\n      this.formOpen = true;\r\n    },\r\n    /** 提交按钮 */\r\n    submitForm() {\r\n      this.$refs[\"form\"].validate(valid => {\r\n        if (valid) {\r\n          if (this.form.formId != null) {\r\n            updateForm(this.form).then(response => {\r\n              this.$modal.msgSuccess(\"修改成功\");\r\n              this.formOpen = false;\r\n            });\r\n          } else {\r\n            addForm(this.form).then(response => {\r\n              this.$modal.msgSuccess(\"新增成功\");\r\n              this.formOpen = false;\r\n            });\r\n          }\r\n          // 关闭当前标签页并返回上个页面\r\n          const obj = { path: \"/flowable/form\", query: { t: Date.now()} };\r\n          this.$tab.closeOpenPage(obj);\r\n        }\r\n      });\r\n    },\r\n    // 取消按钮\r\n    cancel() {\r\n      this.formOpen = false;\r\n      this.reset();\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\nbody {\r\n  margin: 0;  /* 如果页面出现垂直滚动条，则加入此行CSS以消除之 */\r\n}\r\n.el-container.main-container{\r\n  background: #fff;\r\n  margin-left: 0 !important;\r\n}\r\n\r\n</style>\r\n"]}]}