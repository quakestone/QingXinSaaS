{"remainingRequest":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\src\\views\\system\\user\\profile\\resetPwd.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\src\\views\\system\\user\\profile\\resetPwd.vue","mtime":1734577048139},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyB1cGRhdGVVc2VyUHdkIH0gZnJvbSAiQC9hcGkvc3lzdGVtL3VzZXIiOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIGRhdGEoKSB7DQogICAgY29uc3QgZXF1YWxUb1Bhc3N3b3JkID0gKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgPT4gew0KICAgICAgaWYgKHRoaXMudXNlci5uZXdQYXNzd29yZCAhPT0gdmFsdWUpIHsNCiAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKHRoaXMuJHQoJ2guc3lzdGVtLnVzZXIucHJvZmlsZS5yZXNldFB3ZC5wYXNzd29yZEluY29uc2lzdGVudCcpKSk7DQogICAgICB9IGVsc2Ugew0KICAgICAgICBjYWxsYmFjaygpOw0KICAgICAgfQ0KICAgIH07DQogICAgcmV0dXJuIHsNCiAgICAgIHVzZXI6IHsNCiAgICAgICAgb2xkUGFzc3dvcmQ6IHVuZGVmaW5lZCwNCiAgICAgICAgbmV3UGFzc3dvcmQ6IHVuZGVmaW5lZCwNCiAgICAgICAgY29uZmlybVBhc3N3b3JkOiB1bmRlZmluZWQNCiAgICAgIH0sDQogICAgICAvLyDooajljZXmoKHpqowNCiAgICAgIHJ1bGVzOiB7DQogICAgICAgIG9sZFBhc3N3b3JkOiBbDQogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogdGhpcy4kdCgnaC5zeXN0ZW0udXNlci5wcm9maWxlLnJlc2V0UHdkLm9sZFBhc3N3b3JkUmVxdWlyZWQnKSwgdHJpZ2dlcjogImJsdXIiIH0NCiAgICAgICAgXSwNCiAgICAgICAgbmV3UGFzc3dvcmQ6IFsNCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiB0aGlzLiR0KCdoLnN5c3RlbS51c2VyLnByb2ZpbGUucmVzZXRQd2QubmV3UGFzc3dvcmRSZXF1aXJlZCcpLCB0cmlnZ2VyOiAiYmx1ciIgfSwNCiAgICAgICAgICB7IG1pbjogNiwgbWF4OiAyMCwgbWVzc2FnZTogdGhpcy4kdCgnaC5zeXN0ZW0udXNlci5wcm9maWxlLnJlc2V0UHdkLnBhc3N3b3JkTGVuZ3RoJyksIHRyaWdnZXI6ICJibHVyIiB9LA0KICAgICAgICAgIHsgcGF0dGVybjogL15bXjw+Iid8XFxdKyQvLCBtZXNzYWdlOiB0aGlzLiR0KCdoLnN5c3RlbS51c2VyLnByb2ZpbGUucmVzZXRQd2QuaWxsZWdhbENoYXJzJyksIHRyaWdnZXI6ICJibHVyIiB9DQogICAgICAgIF0sDQogICAgICAgIGNvbmZpcm1QYXNzd29yZDogWw0KICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6IHRoaXMuJHQoJ2guc3lzdGVtLnVzZXIucHJvZmlsZS5yZXNldFB3ZC5jb25maXJtUGFzc3dvcmRSZXF1aXJlZCcpLCB0cmlnZ2VyOiAiYmx1ciIgfSwNCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCB2YWxpZGF0b3I6IGVxdWFsVG9QYXNzd29yZCwgdHJpZ2dlcjogImJsdXIiIH0NCiAgICAgICAgXQ0KICAgICAgfQ0KICAgIH07DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBzdWJtaXQoKSB7DQogICAgICB0aGlzLiRyZWZzWyJmb3JtIl0udmFsaWRhdGUodmFsaWQgPT4gew0KICAgICAgICBpZiAodmFsaWQpIHsNCiAgICAgICAgICB1cGRhdGVVc2VyUHdkKHRoaXMudXNlci5vbGRQYXNzd29yZCwgdGhpcy51c2VyLm5ld1Bhc3N3b3JkKS50aGVuKHJlc3BvbnNlID0+IHsNCiAgICAgICAgICAgIHRoaXMuJG1vZGFsLm1zZ1N1Y2Nlc3ModGhpcy4kdCgnaC5zeXN0ZW0udXNlci5wcm9maWxlLnJlc2V0UHdkLnN1Y2Nlc3NNZXNzYWdlJykpOw0KICAgICAgICAgIH0pOw0KICAgICAgICB9DQogICAgICB9KTsNCiAgICB9LA0KICAgIGNsb3NlKCkgew0KICAgICAgdGhpcy4kdGFiLmNsb3NlUGFnZSgpOw0KICAgIH0NCiAgfQ0KfTsNCg=="},{"version":3,"sources":["resetPwd.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"resetPwd.vue","sourceRoot":"src/views/system/user/profile","sourcesContent":["<template>\r\n  <el-form ref=\"form\" :model=\"user\" :rules=\"rules\" label-width=\"80px\">\r\n    <el-form-item :label=\"$t('h.system.user.profile.resetPwd.oldPassword')\" prop=\"oldPassword\">\r\n      <el-input v-model=\"user.oldPassword\" :placeholder=\"$t('h.system.user.profile.resetPwd.enterOldPassword')\" type=\"password\" show-password/>\r\n    </el-form-item>\r\n    <el-form-item :label=\"$t('h.system.user.profile.resetPwd.newPassword')\" prop=\"newPassword\">\r\n      <el-input v-model=\"user.newPassword\" :placeholder=\"$t('h.system.user.profile.resetPwd.enterNewPassword')\" type=\"password\" show-password/>\r\n    </el-form-item>\r\n    <el-form-item :label=\"$t('h.system.user.profile.resetPwd.confirmPassword')\" prop=\"confirmPassword\">\r\n      <el-input v-model=\"user.confirmPassword\" :placeholder=\"$t('h.system.user.profile.resetPwd.confirmNewPassword')\" type=\"password\" show-password/>\r\n    </el-form-item>\r\n    <el-form-item>\r\n      <el-button type=\"primary\" size=\"mini\" @click=\"submit\">{{$t('h.system.user.profile.resetPwd.save')}}</el-button>\r\n      <el-button type=\"danger\" size=\"mini\" @click=\"close\">{{$t('h.system.user.profile.resetPwd.close')}}</el-button>\r\n    </el-form-item>\r\n  </el-form>\r\n</template>\r\n\r\n<script>\r\nimport { updateUserPwd } from \"@/api/system/user\";\r\n\r\nexport default {\r\n  data() {\r\n    const equalToPassword = (rule, value, callback) => {\r\n      if (this.user.newPassword !== value) {\r\n        callback(new Error(this.$t('h.system.user.profile.resetPwd.passwordInconsistent')));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      user: {\r\n        oldPassword: undefined,\r\n        newPassword: undefined,\r\n        confirmPassword: undefined\r\n      },\r\n      // 表单校验\r\n      rules: {\r\n        oldPassword: [\r\n          { required: true, message: this.$t('h.system.user.profile.resetPwd.oldPasswordRequired'), trigger: \"blur\" }\r\n        ],\r\n        newPassword: [\r\n          { required: true, message: this.$t('h.system.user.profile.resetPwd.newPasswordRequired'), trigger: \"blur\" },\r\n          { min: 6, max: 20, message: this.$t('h.system.user.profile.resetPwd.passwordLength'), trigger: \"blur\" },\r\n          { pattern: /^[^<>\"'|\\\\]+$/, message: this.$t('h.system.user.profile.resetPwd.illegalChars'), trigger: \"blur\" }\r\n        ],\r\n        confirmPassword: [\r\n          { required: true, message: this.$t('h.system.user.profile.resetPwd.confirmPasswordRequired'), trigger: \"blur\" },\r\n          { required: true, validator: equalToPassword, trigger: \"blur\" }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    submit() {\r\n      this.$refs[\"form\"].validate(valid => {\r\n        if (valid) {\r\n          updateUserPwd(this.user.oldPassword, this.user.newPassword).then(response => {\r\n            this.$modal.msgSuccess(this.$t('h.system.user.profile.resetPwd.successMessage'));\r\n          });\r\n        }\r\n      });\r\n    },\r\n    close() {\r\n      this.$tab.closePage();\r\n    }\r\n  }\r\n};\r\n</script>"]}]}