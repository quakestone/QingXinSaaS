{"remainingRequest":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\src\\components\\Process\\panel\\taskPanel.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\src\\components\\Process\\panel\\taskPanel.vue","mtime":1733705220400},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\chenxi\\Desktop\\pro\\QingXinSaaS\\qingxinsaas-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["taskPanel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"taskPanel.vue","sourceRoot":"src/components/Process/panel","sourcesContent":["<template>\r\n  <div>\r\n    <el-form label-width=\"80px\" size=\"small\">\r\n      <el-form-item label=\"异步\">\r\n        <el-switch v-model=\"bpmnFormData.async\" active-text=\"是\" inactive-text=\"否\" @change=\"updateElementTask('async')\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"用户类型\">\r\n        <el-select v-model=\"bpmnFormData.userType\" placeholder=\"选择人员\" @change=\"updateUserType\">\r\n          <el-option\r\n            v-for=\"item in userTypeOption\"\r\n            :key=\"item.value\"\r\n            :label=\"item.label\"\r\n            :value=\"item.value\"\r\n          />\r\n        </el-select>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"指定人员\" v-if=\"bpmnFormData.userType === 'assignee'\">\r\n        <el-input-tag v-model=\"bpmnFormData.assignee\" :value=\"bpmnFormData.assignee\"/>\r\n        <el-button-group class=\"ml-4\" style=\"margin-top: 4px\">\r\n          <!--指定人员-->\r\n          <el-tooltip class=\"box-item\" effect=\"dark\" content=\"指定人员\" placement=\"bottom\">\r\n            <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-user\" @click=\"singleUserCheck\"/>\r\n          </el-tooltip>\r\n          <!--选择表达式-->\r\n          <el-tooltip class=\"box-item\" effect=\"dark\" content=\"选择表达式\" placement=\"bottom\">\r\n            <el-button size=\"mini\" type=\"warning\" icon=\"el-icon-postcard\" @click=\"singleExpCheck\"/>\r\n          </el-tooltip>\r\n        </el-button-group>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"候选人员\" v-else-if=\"bpmnFormData.userType === 'candidateUsers'\">\r\n        <el-input-tag v-model=\"bpmnFormData.candidateUsers\" :value=\"bpmnFormData.candidateUsers\"/>\r\n        <el-button-group class=\"ml-4\" style=\"margin-top: 4px\">\r\n          <!--候选人员-->\r\n          <el-tooltip class=\"box-item\" effect=\"dark\" content=\"候选人员\" placement=\"bottom\">\r\n            <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-user\" @click=\"multipleUserCheck\"/>\r\n          </el-tooltip>\r\n          <!--选择表达式-->\r\n          <el-tooltip class=\"box-item\" effect=\"dark\" content=\"选择表达式\" placement=\"bottom\">\r\n            <el-button size=\"mini\" type=\"warning\" icon=\"el-icon-postcard\" @click=\"singleExpCheck\"/>\r\n          </el-tooltip>\r\n        </el-button-group>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"候选角色\" v-else>\r\n        <el-input-tag v-model=\"bpmnFormData.candidateGroups\" :value=\"bpmnFormData.candidateGroups\"/>\r\n        <el-button-group class=\"ml-4\" style=\"margin-top: 4px\">\r\n          <!--候选角色-->\r\n          <el-tooltip class=\"box-item\" effect=\"dark\" content=\"候选角色\" placement=\"bottom\">\r\n            <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-user\"  @click=\"multipleRoleCheck\"/>\r\n          </el-tooltip>\r\n          <!--选择表达式-->\r\n          <el-tooltip class=\"box-item\" effect=\"dark\" content=\"选择表达式\" placement=\"bottom\">\r\n            <el-button size=\"mini\" type=\"warning\" icon=\"el-icon-postcard\" @click=\"singleExpCheck\"/>\r\n          </el-tooltip>\r\n        </el-button-group>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"优先级\">\r\n        <el-input v-model=\"bpmnFormData.priority\" @change=\"updateElementTask('priority')\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"到期时间\">\r\n        <el-input v-model=\"bpmnFormData.dueDate\" @change=\"updateElementTask('dueDate')\"/>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n    <!--选择人员-->\r\n    <el-dialog\r\n      title=\"选择人员\"\r\n      :visible.sync=\"userVisible\"\r\n      width=\"60%\"\r\n      :close-on-press-escape=\"false\"\r\n      :show-close=\"false\"\r\n    >\r\n      <flow-user v-if=\"userVisible\" :checkType=\"checkType\" :selectValues=\"selectData.assignee || selectData.candidateUsers\" @handleUserSelect=\"userSelect\"></flow-user>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button size=\"small\" @click=\"userVisible = false\">取 消</el-button>\r\n        <el-button size=\"small\" type=\"primary\" @click=\"checkUserComplete\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!--选择角色-->\r\n    <el-dialog\r\n      title=\"选择候选角色\"\r\n      :visible.sync=\"roleVisible\"\r\n      width=\"60%\"\r\n      :close-on-press-escape=\"false\"\r\n      :show-close=\"false\"\r\n    >\r\n      <flow-role v-if=\"roleVisible\" :selectValues=\"selectData.candidateGroups\" @handleRoleSelect=\"roleSelect\"></flow-role>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button size=\"small\" @click=\"roleVisible = false\">取 消</el-button>\r\n        <el-button size=\"small\" type=\"primary\" @click=\"checkRoleComplete\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!--选择表达式-->\r\n    <el-dialog\r\n      title=\"选择表达式\"\r\n      :visible.sync=\"expVisible\"\r\n      width=\"60%\"\r\n      :close-on-press-escape=\"false\"\r\n      :show-close=\"false\"\r\n    >\r\n      <flow-exp v-if=\"expVisible\" :selectValues=\"selectData.exp\" @handleSingleExpSelect=\"expSelect\"></flow-exp>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button size=\"small\" @click=\"expVisible = false\">取 消</el-button>\r\n        <el-button size=\"small\" type=\"primary\" @click=\"checkExpComplete\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport FlowUser from '@/components/flow/User'\r\nimport FlowRole from '@/components/flow/Role'\r\nimport FlowExp from '@/components/flow/Expression'\r\nimport ElInputTag from '@/components/flow/ElInputTag'\r\nimport {StrUtil} from '@/utils/StrUtil'\r\n\r\nexport default {\r\n  name: \"TaskPanel\",\r\n  components: {\r\n    FlowUser,\r\n    FlowRole,\r\n    FlowExp,\r\n    ElInputTag\r\n  },\r\n  /** 组件传值  */\r\n  props : {\r\n    id: {\r\n      type: String,\r\n      required: true\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      userVisible: false,\r\n      roleVisible: false,\r\n      expVisible: false,\r\n      isIndeterminate: true,\r\n      checkType: 'single', // 选类\r\n      userType: '',\r\n      userTypeOption: [\r\n        {label: '指定人员', value: 'assignee'},\r\n        {label: '候选人员', value: 'candidateUsers'},\r\n        {label: '候选角色', value: 'candidateGroups'}\r\n      ],\r\n      checkAll: false,\r\n      bpmnFormData: {\r\n        userType: \"\",\r\n        assignee: \"\",\r\n        candidateUsers: \"\",\r\n        candidateGroups: \"\",\r\n        dueDate: \"\",\r\n        priority: \"\",\r\n        dataType: \"\",\r\n        expId: \"\",\r\n      },\r\n      // 数据回显\r\n      selectData: {\r\n        assignee: null,\r\n        candidateUsers: null,\r\n        candidateGroups: null,\r\n        exp: null,\r\n      },\r\n      otherExtensionList:[],\r\n    }\r\n  },\r\n\r\n  /** 传值监听 */\r\n  watch: {\r\n    id: {\r\n      handler(newVal) {\r\n        if (StrUtil.isNotBlank(newVal)) {\r\n          this.resetTaskForm();\r\n        }\r\n      },\r\n      immediate: true, // 立即生效\r\n    },\r\n  },\r\n  created() {\r\n\r\n  },\r\n  methods: {\r\n    // 初始化表单\r\n    resetTaskForm() {\r\n      // 初始化设为空值\r\n      this.bpmnFormData = {\r\n        userType: \"\",\r\n        assignee: \"\",\r\n        candidateUsers: \"\",\r\n        candidateGroups: \"\",\r\n        dueDate: \"\",\r\n        priority: \"\",\r\n        dataType: \"\",\r\n        expId: \"\",\r\n      }\r\n      this.selectData = {\r\n        assignee: null,\r\n        candidateUsers: null,\r\n        candidateGroups: null,\r\n        exp: null,\r\n      }\r\n      // 流程节点信息上取值\r\n      for (let key in this.bpmnFormData) {\r\n        const value = this.modelerStore.element?.businessObject[key] || this.bpmnFormData[key];\r\n        this.$set(this.bpmnFormData, key, value);\r\n      }\r\n      // 人员信息回显\r\n      this.checkValuesEcho(this.bpmnFormData);\r\n    },\r\n\r\n    // 更新节点信息\r\n    updateElementTask(key) {\r\n      const taskAttr = Object.create(null);\r\n      taskAttr[key] = this.bpmnFormData[key] || \"\";\r\n      this.modelerStore.modeling.updateProperties(this.modelerStore.element, taskAttr);\r\n    },\r\n\r\n    // 更新自定义流程节点/参数信息\r\n    updateCustomElement(key, value) {\r\n      const taskAttr = Object.create(null);\r\n      taskAttr[key] = value;\r\n      this.modelerStore.modeling.updateProperties(this.modelerStore.element, taskAttr);\r\n    },\r\n\r\n    // 更新人员类型\r\n    updateUserType(val) {\r\n      // 删除xml中已选择数据类型节点\r\n      this.deleteFlowAttar();\r\n      delete this.modelerStore.element.businessObject[`userType`]\r\n      // 清除已选人员数据\r\n      this.bpmnFormData[val] = null;\r\n      this.selectData = {\r\n        assignee: null,\r\n        candidateUsers: null,\r\n        candidateGroups: null,\r\n        exp: null,\r\n      }\r\n      // 写入userType节点信息到xml\r\n      this.updateCustomElement('userType', val);\r\n    },\r\n\r\n    // 设计器右侧表单数据回显\r\n    checkValuesEcho(formData) {\r\n      if (StrUtil.isNotBlank(formData.expId)) {\r\n        this.getExpList(formData.expId, formData.userType);\r\n      } else {\r\n        if (\"candidateGroups\" === formData.userType) {\r\n          this.getRoleList(formData[formData.userType], formData.userType);\r\n        } else {\r\n          this.getUserList(formData[formData.userType], formData.userType);\r\n        }\r\n      }\r\n    },\r\n\r\n    // 获取表达式信息\r\n    getExpList(val, key) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        this.bpmnFormData[key] = this.modelerStore.expList?.find(item => item.id.toString() === val).name;\r\n        this.selectData.exp = this.modelerStore.expList?.find(item => item.id.toString() === val).id;\r\n      }\r\n    },\r\n\r\n    // 获取人员信息\r\n    getUserList(val, key) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        const newArr = this.modelerStore.userList?.filter(i => val.split(',').includes(i.userId.toString()))\r\n        this.bpmnFormData[key] = newArr.map(item => item.nickName).join(',');\r\n        if ('assignee' === key) {\r\n          this.selectData[key] = newArr.find(item => item.userId.toString() === val).userId;\r\n        } else {\r\n          this.selectData[key] = newArr.map(item => item.userId);\r\n        }\r\n      }\r\n    },\r\n\r\n    // 获取角色信息\r\n    getRoleList(val, key) {\r\n      if (StrUtil.isNotBlank(val)) {\r\n        const newArr = this.modelerStore.roleList?.filter(i => val.split(',').includes(i.roleId.toString()))\r\n        this.bpmnFormData[key] = newArr.map(item => item.roleName).join(',');\r\n        if ('assignee' === key) {\r\n          this.selectData[key] = newArr.find(item => item.roleId.toString() === val).roleId;\r\n        } else {\r\n          this.selectData[key] = newArr.map(item => item.roleId);\r\n        }\r\n      }\r\n    },\r\n\r\n    // ------ 流程审批人员信息弹出框 start---------\r\n\r\n    /*单选人员*/\r\n    singleUserCheck() {\r\n      this.userVisible = true;\r\n      this.checkType = \"single\";\r\n    },\r\n\r\n    /*多选人员*/\r\n    multipleUserCheck() {\r\n      this.userVisible = true;\r\n      this.checkType = \"multiple\";\r\n    },\r\n\r\n    /*单选角色*/\r\n    singleRoleCheck() {\r\n      this.roleVisible = true;\r\n      this.checkType = \"single\";\r\n    },\r\n\r\n    /*多选角色*/\r\n    multipleRoleCheck() {\r\n      this.roleVisible = true;\r\n    },\r\n\r\n    /*单选表达式*/\r\n    singleExpCheck() {\r\n      this.expVisible = true;\r\n    },\r\n\r\n    // 表达式选中数据\r\n    expSelect(selection) {\r\n      if (selection) {\r\n        this.deleteFlowAttar();\r\n        this.bpmnFormData[this.bpmnFormData.userType] = selection.name;\r\n        this.updateCustomElement('dataType', selection.dataType);\r\n        this.updateCustomElement('expId', selection.id.toString());\r\n        this.updateCustomElement(this.bpmnFormData.userType, selection.expression);\r\n        this.handleSelectData(\"exp\", selection.id);\r\n      }\r\n    },\r\n\r\n    // 用户选中数据 TODO: 后面更改为 点击确认按钮再赋值人员信息\r\n    userSelect(selection) {\r\n      if (selection) {\r\n        this.deleteFlowAttar();\r\n        this.updateCustomElement('dataType', 'fixed');\r\n        if (selection instanceof Array) {\r\n          const userIds = selection.map(item => item.userId);\r\n          const nickName = selection.map(item => item.nickName);\r\n          // userType = candidateUsers\r\n          this.bpmnFormData[this.bpmnFormData.userType] = nickName.join(',');\r\n          this.updateCustomElement(this.bpmnFormData.userType, userIds.join(','));\r\n          this.handleSelectData(this.bpmnFormData.userType, userIds);\r\n        } else {\r\n          // userType = assignee\r\n          this.bpmnFormData[this.bpmnFormData.userType] = selection.nickName;\r\n          this.updateCustomElement(this.bpmnFormData.userType, selection.userId);\r\n          this.handleSelectData(this.bpmnFormData.userType, selection.userId);\r\n        }\r\n      }\r\n    },\r\n\r\n    // 角色选中数据\r\n    roleSelect(selection, name) {\r\n      if (selection && name) {\r\n        this.deleteFlowAttar();\r\n        this.bpmnFormData[this.bpmnFormData.userType] = name;\r\n        this.updateCustomElement('dataType', 'fixed');\r\n        // userType = candidateGroups\r\n        this.updateCustomElement(this.bpmnFormData.userType, selection);\r\n        this.handleSelectData(this.bpmnFormData.userType, selection);\r\n      }\r\n    },\r\n\r\n    // 处理人员回显\r\n    handleSelectData(key, value) {\r\n      for (let oldKey in this.selectData) {\r\n        if (key !== oldKey) {\r\n          this.$set(this.selectData, oldKey, null);\r\n        } else {\r\n          this.$set(this.selectData, oldKey, value);\r\n        }\r\n      }\r\n    },\r\n\r\n    /*用户选中赋值*/\r\n    checkUserComplete() {\r\n      this.userVisible = false;\r\n      this.checkType = \"\";\r\n    },\r\n\r\n    /*候选角色选中赋值*/\r\n    checkRoleComplete() {\r\n      this.roleVisible = false;\r\n    },\r\n\r\n    /*表达式选中赋值*/\r\n    checkExpComplete() {\r\n      this.expVisible = false;\r\n    },\r\n\r\n    // 删除节点\r\n    deleteFlowAttar() {\r\n      delete this.modelerStore.element.businessObject[`dataType`]\r\n      delete this.modelerStore.element.businessObject[`expId`]\r\n      delete this.modelerStore.element.businessObject[`assignee`]\r\n      delete this.modelerStore.element.businessObject[`candidateUsers`]\r\n      delete this.modelerStore.element.businessObject[`candidateGroups`]\r\n    },\r\n\r\n    // 去重数据\r\n    unique(arr, code) {\r\n      const res = new Map();\r\n      return arr.filter((item) => !res.has(item[code]) && res.set(item[code], 1));\r\n    },\r\n\r\n    // 更新扩展属性信息\r\n    updateElementExtensions(properties) {\r\n      const extensions = this.modelerStore.moddle.create(\"bpmn:ExtensionElements\", {\r\n        values: this.otherExtensionList.concat([properties])\r\n      });\r\n\r\n      this.modelerStore.modeling.updateProperties(this.modelerStore.element, {\r\n        extensionElements: extensions\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}